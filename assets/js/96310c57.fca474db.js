"use strict";(self.webpackChunksamzong_me=self.webpackChunksamzong_me||[]).push([[69768],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,y=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(y,a(a({ref:t},c),{},{components:n})):r.createElement(y,a({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},73501:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const i={title:"python3 setup.py --help-commands",tags:[]},a=void 0,l={permalink:"/2020/11/04/python3-setup.py-help-commands",editUrl:"https://github.com/samzong/samzong.me/edit/main/blog/2020-11-04-python3-setup.py-help-commands.md",source:"@site/blog/2020-11-04-python3-setup.py-help-commands.md",title:"python3 setup.py --help-commands",description:"",date:"2020-11-04T00:00:00.000Z",formattedDate:"2020\u5e7411\u67084\u65e5",tags:[],readingTime:.8466666666666667,hasTruncateMarker:!1,authors:[],frontMatter:{title:"python3 setup.py --help-commands",tags:[]},prevItem:{title:"beautiful soup 4 \u4f7f\u7528\u6280\u5de7",permalink:"/2020/11/05/beautiful-soup-4-shi-yong-ji-qiao"},nextItem:{title:"Use devtools encodeurl & decodeurl",permalink:"/2020/10/23/use-devtools-encodeurl-&-decodeurl"}},s={authorsImageUrls:[]},p=[],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\u2192 python3 setup.py --help-commands\n\nStandard commands:\n  build             build everything needed to install\n  build_py          "build" pure Python modules (copy to build directory)\n  build_ext         build C/C++ extensions (compile/link to build directory)\n  build_clib        build C/C++ libraries used by Python extensions\n  build_scripts     "build" scripts (copy and fixup #! line)\n  clean             clean up temporary files from \'build\' command\n  install           install everything from build directory\n  install_lib       install all Python modules (extensions and pure Python)\n  install_headers   install C/C++ header files\n  install_scripts   install scripts (Python or otherwise)\n  install_data      install data files\n  sdist             create a source distribution (tarball, zip file, etc.)\n  register          register the distribution with the Python package index\n  bdist             create a built (binary) distribution\n  bdist_dumb        create a "dumb" built distribution\n  bdist_rpm         create an RPM distribution\n  bdist_wininst     create an executable installer for MS Windows\n  check             perform some checks on the package\n  upload            upload binary package to PyPI\n\nExtra commands:\n  bdist_wheel       create a wheel distribution\n  alias             define a shortcut to invoke one or more commands\n  bdist_egg         create an "egg" distribution\n  develop           install package in \'development mode\'\n  dist_info         create a .dist-info directory\n  easy_install      Find/get/install Python packages\n  egg_info          create a distribution\'s .egg-info directory\n  install_egg_info  Install an .egg-info directory for the package\n  rotate            delete older distributions, keeping N newest files\n  saveopts          save supplied options to setup.cfg or other config file\n  setopt            set an option in setup.cfg or another config file\n  test              run unit tests after in-place build (deprecated)\n  upload_docs       Upload documentation to PyPI\n\nusage: setup.py [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\n   or: setup.py --help [cmd1 cmd2 ...]\n   or: setup.py --help-commands\n   or: setup.py cmd --help\n')))}u.isMDXComponent=!0}}]);