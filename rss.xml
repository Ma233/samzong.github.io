<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
        <title>SAMZONG</title>
        <description>SAMZONG - Samzong Lu</description>
        <link>https://samzong.me</link>
        <atom:link href="https://samzong.me/rss.xml" rel="self" type="application/rss+xml" />
        <lastBuildDate>Tue, 15 Nov 2022 10:04:31 -0600</lastBuildDate>
        <pubDate>Tue, 15 Nov 2022 10:04:31 -0600</pubDate>
        <ttl>60</ttl>


        <item>
                <title>K8s系列 南北流量和东西流量</title>
                <description>&lt;h2 id=&quot;南北流量和东西流量-是什么意思&quot;&gt;南北流量和东西流量 是什么意思？&lt;/h2&gt;

&lt;p&gt;在Service Mesh微服务架构中，我们常常会听到东西流量和南北流量两个术语。&lt;/p&gt;

&lt;p&gt;南北流量（NORTH-SOUTH traffic）和东西流量（EAST-WEST traffic）是数据中心环境中的网络流量模式。下面我们通过一个例子来理解这两个术语。&lt;/p&gt;

&lt;p&gt;假设我们尝试通过浏览器访问某些Web应用。Web应用部署在位于某个数据中心的应用服务器中。在多层体系结构中，典型的数据中心不仅包含应用服务器，还包含其他服务器，如负载均衡器、数据库等，以及路由器和交换机等网络组件。假设应用服务器是负载均衡器的前端。&lt;/p&gt;

&lt;p&gt;当我们访问web应用时，会发生以下类型的网络流量：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/f9c10a68e23f6955cc25c176d2ea98f7.png?x-oss-process=image/resize,w_960,m_lfit&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;数据中心树型拓扑图是一个典型的包含接入层、汇聚层、核心层三层的网络结构。这种结构诞生之初就是为了将外部流量引流到内部应用。&lt;/p&gt;

&lt;p&gt;流量从外部穿过防火墙或者数据中心其它外围网络设备进来，对应到上⾯这张图里，流动方向为从上到下，称为南向流量（和地图一样，上北下南），而与之对应的，数据中心内部产生的，离开数据中心的流量，从下到上故称为北向流量。合起来称为南北流量。&lt;/p&gt;

&lt;p&gt;在微服务化流行之前，以巨石系统（monolithic）这种单体应用为单位部署的方式，产生的是典型的南北流量。一个单体应用配有一个专门的服务器（或虚拟机），一个外部请求通常在单体应用内独立完成，除了访问数据库等必须依赖服务之外，很少会发生横向的流量。&lt;/p&gt;

&lt;p&gt;但云计算机、大数据、微服务、云原生等技术的发展催生了大量的从左到右以及从右到左的流量，也被称为东西流量。&lt;/p&gt;

&lt;p&gt;数据中心内部南北流量的削弱，而东西流量的井喷在硬件上要求数据中心要横向扩展以提供更宽的大二层以及容纳更多的服务器，而在软件上则要求一种新的服务编排方式以便能充分挖掘、利用现有的计算能力，从这个角度看 K8s 的出现是一种必然。&lt;/p&gt;

&lt;p&gt;举两个例子：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;客户端（位于数据中心一侧的浏览器）与负载均衡器（位于数据中心）之间的网络流量&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;负载均衡器、应用服务器、数据库等之间的网络流量，它们都位于数据中心。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在这个例子中，前者即即客户端和服务器之间的流量被称为南北流量。简而言之，南北流量是server-client流量。&lt;/p&gt;

&lt;p&gt;第二种流量即不同服务器之间的流量与数据中心或不同数据中心之间的网络流被称为东西流量。简而言之，东西流量是 service-service 流量。&lt;/p&gt;

&lt;p&gt;当下，东西流量远超南北流量，尤其是在当今的大数据生态系统中，比如Hadoop生态系统（大量server驻留在数据中心中，用map reduce处理），server-server流量远大于server-client流量。&lt;/p&gt;

&lt;p&gt;大家可能会好奇，东西南北，为什么这么命名 ？&lt;/p&gt;

&lt;p&gt;该命名来自于绘制典型network diagrams的习惯。在图表中，通常核心网络组件绘制在顶部（NORTH），客户端绘制在底部（SOUTH），而数据中心内的不同服务器水平（EAST-WEST）&lt;/p&gt;

</description>
                <link>https://samzong.me/post/2022/09/K8s%E7%B3%BB%E5%88%97-%E5%8D%97%E5%8C%97%E6%B5%81%E9%87%8F%E5%92%8C%E4%B8%9C%E8%A5%BF%E6%B5%81%E9%87%8F.html</link>
                <guid>https://samzong.me/post/2022/09/K8s系列-南北流量和东西流量</guid>
                <pubDate>Mon, 12 Sep 2022 00:00:00 -0500</pubDate>
        </item>

        <item>
                <title>jq 命令行 Json 处理神器</title>
                <description>&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mozillazg.com/2018/01/jq-use-examples-cookbook.html&quot;&gt;https://mozillazg.com/2018/01/jq-use-examples-cookbook.htm&lt;/a&gt;-&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;jq 命令日常练习 https://jqplay.org/s/KhRuUFCP2h&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一个灵活的轻量级命令行JSON处理器&lt;/p&gt;

&lt;h2 id=&quot;说明&quot;&gt;说明&lt;/h2&gt;

&lt;p&gt;jq 是 stedolan 开发的一个轻量级的和灵活的命令行JSON处理器，源码请参考 &lt;a href=&quot;https://github.com/stedolan/jq&quot;&gt;jq 项目主页&lt;/a&gt; 。jq 用于处理JSON输入，将给定过滤器应用于其JSON文本输入并在标准输出上将过滤器的结果生成为JSON；最简单的过滤器是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt;，它将jq的输入未经修改地复制到其输出中（格式设置除外）； 请注意，jq 当前仅支持64位双精度浮点数（IEEE754）。&lt;/p&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Debian系，如 Ubuntu&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;jq

&lt;span class=&quot;c&quot;&gt;# RedHat系, 如 CentOS&lt;/span&gt;
yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;jq

&lt;span class=&quot;c&quot;&gt;# MacOS&lt;/span&gt;
brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;jq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;语法&quot;&gt;语法&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jq &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] &amp;lt;jq filter&amp;gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;file...]
jq &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] &lt;span class=&quot;nt&quot;&gt;--args&lt;/span&gt; &amp;lt;jq filter&amp;gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;strings...]
jq &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] &lt;span class=&quot;nt&quot;&gt;--jsonargs&lt;/span&gt; &amp;lt;jq filter&amp;gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;JSON_TEXTS...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;选项&quot;&gt;选项&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;               紧凑而不是漂亮的输出&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt;               使用&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;null&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;作为单个输入值&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt;               根据输出设置退出状态代码&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;               将所有输入读取（吸取）到数组中；应用过滤器&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt;               输出原始字符串，而不是JSON文本&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt;               读取原始字符串，而不是JSON文本&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt;               为JSON着色&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-M&lt;/span&gt;               单色（不要为JSON着色）&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt;               在输出上排序对象的键&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--tab&lt;/span&gt;            使用制表符进行缩进&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--arg&lt;/span&gt; a v        将变量&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;设置为value&amp;lt;v&amp;gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--argjson&lt;/span&gt; a v    将变量&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;设置为JSON value&amp;lt;v&amp;gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--slurpfile&lt;/span&gt; a f  将变量&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;设置为从&amp;lt;f&amp;gt;读取的JSON文本数组&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--rawfile&lt;/span&gt; a f    将变量&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;设置为包含&amp;lt;f&amp;gt;内容的字符串&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--args&lt;/span&gt;           其余参数是字符串参数，而不是文件&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--jsonargs&lt;/span&gt;       其余的参数是JSON参数，而不是文件&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;               终止参数处理&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;例子&quot;&gt;例子&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt;: 以漂亮的方式输出&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ &quot;foo&quot;: { &quot;bar&quot;: { &quot;baz&quot;: 123 } } }'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;foo&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;baz&quot;&lt;/span&gt;: 123
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.foo, .foo.bar, .foo?&lt;/code&gt;: 获取一个键的值&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{&quot;foo&quot;: 42, &quot;bar&quot;: &quot;less interesting data&quot;}'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'.foo'&lt;/span&gt;
42
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.[], .[]?, .[2], .[10:15]&lt;/code&gt;: 数组运算&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[{&quot;name&quot;:&quot;JSON&quot;, &quot;good&quot;:true}, {&quot;name&quot;:&quot;XML&quot;, &quot;good&quot;:false}]'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'.[1]'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;XML&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;good&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[], {}&lt;/code&gt;: 构造一个数组/对象&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{&quot;user&quot;:&quot;stedolan&quot;,&quot;titles&quot;:[&quot;JQ Primer&quot;, &quot;More JQ&quot;]}'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'{user, title: .titles[]}'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;user&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;stedolan&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;JQ Primer&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;user&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;stedolan&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;More JQ&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;length&lt;/code&gt;: 计算一个值的长度&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[[1,2], &quot;string&quot;, {&quot;a&quot;:2}, null]'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'.[] | length'&lt;/span&gt;                                  
2
6
1
0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keys&lt;/code&gt;: 取出数组中的键&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{&quot;abc&quot;: 1, &quot;abcd&quot;: 2, &quot;Foo&quot;: 3}'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'keys'&lt;/span&gt;                                        
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;Foo&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;abc&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;abcd&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt;: 使用多个过滤器&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ &quot;foo&quot;: 42, &quot;bar&quot;: &quot;something else&quot;, &quot;baz&quot;: true}'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'.foo, .bar'&lt;/span&gt; 
42
&lt;span class=&quot;s2&quot;&gt;&quot;something else&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;|&lt;/code&gt;: 通过管道将一个过滤器的输出当做下一个过滤器的输入&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[{&quot;name&quot;:&quot;JSON&quot;, &quot;good&quot;:true}, {&quot;name&quot;:&quot;XML&quot;, &quot;good&quot;:false}]'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'.[] | .name'&lt;/span&gt;                                                 
&lt;span class=&quot;s2&quot;&gt;&quot;JSON&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;XML&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;select(foo)&lt;/code&gt;: 如果foo返回true，则输入保持不变&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[1,5,3,0,7]'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'map(select(. &amp;gt;= 2))'&lt;/span&gt;                                                    
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
  5,
  3,
  7
&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map(foo)&lt;/code&gt;: 每个输入调用过滤器&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[1,2,3]'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'map(.+1)'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
  2,
  3,
  4
&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if-then-else-end&lt;/code&gt;: 条件判断&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'if . == 0 then &quot;zero&quot; elif . == 1 then &quot;one&quot; else &quot;many&quot; end'&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;many&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\(foo)&lt;/code&gt;: 在字符串中插入值并进行运算&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'42'&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'&quot;The input was \(.), which is one less than \(.+1)&quot;'&lt;/span&gt;          
&lt;span class=&quot;s2&quot;&gt;&quot;The input was 42, which is one less than 43&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
                <link>https://samzong.me/post/2022/07/jq-%E5%91%BD%E4%BB%A4%E8%A1%8C-Json-%E5%A4%84%E7%90%86%E7%A5%9E%E5%99%A8.html</link>
                <guid>https://samzong.me/post/2022/07/jq-命令行-Json-处理神器</guid>
                <pubDate>Fri, 22 Jul 2022 00:00:00 -0500</pubDate>
        </item>

        <item>
                <title>闭关备战 11月</title>
                <description>&lt;p&gt;title: 闭关备战 11月
toc: true
author: samzong.lu
author_id: defaultAuthorId
language: zh
abbrlink: 13757
tags: []
categories: []
date: 2022-07-18 00:35:00
—&lt;/p&gt;
&lt;h2 id=&quot;目标&quot;&gt;目标&lt;/h2&gt;

&lt;p&gt;获得软考中级证书，完成落户条件准备。&lt;/p&gt;

&lt;p&gt;下一次考试时间是 11 月份，&lt;/p&gt;

&lt;p&gt;开始闭关。&lt;/p&gt;
</description>
                <link>https://samzong.me/post/2022/07/%E9%97%AD%E5%85%B3%E5%A4%87%E6%88%98-11%E6%9C%88.html</link>
                <guid>https://samzong.me/post/2022/07/闭关备战-11月</guid>
                <pubDate>Mon, 18 Jul 2022 00:00:00 -0500</pubDate>
        </item>

        <item>
                <title>Hexo 增加admonition样式支持</title>
                <description>&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;

&lt;p&gt;除了在 Hexo 维护个人博客之外，目前经常用到的 2 个文档工具： 语雀和 Mkdocs 都是支持 admonition样式，所以也在考虑如何给 Hexo 博客文章也增加这样的能力。&lt;/p&gt;

&lt;p&gt;保证写作习惯的一致性，好在有人开发出对应的插件，感谢.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://github.com/lxl80/hexo-admonition&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;安装方式&quot;&gt;安装方式&lt;/h2&gt;

&lt;p&gt;简单通过 2 个步骤即可，&lt;/p&gt;

&lt;h3 id=&quot;安装插件&quot;&gt;安装插件&lt;/h3&gt;

&lt;p&gt;采用 npm 安装，如下：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;hexo-admonition &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;样式配置&quot;&gt;样式配置&lt;/h3&gt;

&lt;p&gt;你的 hexo 可能会使用不同主题，所以需要自己增加样式，将如下样式放入 hexo 主题的自定义样式文件中（如：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ext.css&lt;/code&gt;），并按自己喜好修改：&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.admonition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.5625em&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.6rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.64rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;page-break-inside&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;avoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.3rem&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#42b983&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.3rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.1rem&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.4rem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.05rem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fafafa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-.6rem&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-.6rem&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.8em&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-.6rem&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.4rem&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.6rem&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.4rem&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.5rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;700&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;66&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;185&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;131&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.9rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#42b983&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;184&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;212&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.warning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.attention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.caution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;145&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.failure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.fail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;82&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;82&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.admonition.info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.admonition.todo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#00b8d4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.admonition.warning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.admonition.attention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.admonition.caution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ff9100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.admonition.failure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.admonition.missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.admonition.fail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.admonition.error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ff5252&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#00b8d4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#00c853&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.warning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.attention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.caution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ff9100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.failure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.admonition-title&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ff5252&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.admonition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:last-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用说明&quot;&gt;使用说明&lt;/h2&gt;

&lt;p&gt;Hexo-admonition 遵循一种简单的语法：每个块都以 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;!!!&lt;/code&gt; 开头，然后是代表提示类型的关键字（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type&lt;/code&gt;）及标题（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt;）。例如:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;!!! note Hexo-admonition 插件使用示例
    这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 note，并设置了自定义标题。
    提示内容开头留 4 个空格，可以有多行，最后用空行结束此标记。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在 Hexo 渲染前，将被转换成如下内容：&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;admonition note &quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;admonition-title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Hexo-admonition 插件使用示例&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 note，并设置了自定义标题。&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;提示内容开头留 4 个空格，可以有多行，最后用空行结束此标记。&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最终呈现效果如下：&lt;/p&gt;

&lt;p&gt;!!! note Hexo-admonition 插件使用示例
    这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 note，并设置了自定义标题。
    提示内容开头留 4 个空格，可以有多行，最后用空行结束此标记。&lt;/p&gt;

&lt;h3 id=&quot;支持的类型&quot;&gt;支持的类型&lt;/h3&gt;

&lt;p&gt;提示类型 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type&lt;/code&gt; 将用作 CSS 类名称，暂支持如下类型：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;note&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;info, todo&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;warning, attention, caution&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;error, failure, missing, fail&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;设置隐藏标题&quot;&gt;设置/隐藏标题&lt;/h3&gt;

&lt;p&gt;标题 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; 是可选的，当未设置时，将以 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type&lt;/code&gt; 作为默认值:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;!!! warning
    这是一条采用默认标题的警告信息。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;p&gt;!!! warning
    这是一条采用默认标题的警告信息。&lt;/p&gt;

&lt;p&gt;如果不想显示标题，可以将 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; 设置为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;!!! Warning &quot;&quot;
    这是一条不带标题的警告信息。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;p&gt;!!! Warning “”
    这是一条不带标题的警告信息。&lt;/p&gt;

&lt;h2 id=&quot;卡片演示&quot;&gt;卡片演示&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;主要四种类型：info, warning, error, note&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;!!! note Hexo-admonition 插件使用示例
    这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 note，并设置了自定义标题。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;提示内容开头留 4 个空格，可以有多行，最后用空行结束此标记。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;!!! warning Hexo-admonition 插件使用示例
    这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 warning，并设置了自定义标题。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;提示内容开头留 4 个空格，可以有多行，最后用空行结束此标记。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;!!! error Hexo-admonition 插件使用示例
    这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 error，并设置了自定义标题。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;提示内容开头留 4 个空格，可以有多行，最后用空行结束此标记。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;!!! info Hexo-admonition 插件使用示例
    这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 info，并设置了自定义标题。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;提示内容开头留 4 个空格，可以有多行，最后用空行结束此标记。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;!!! todo Hexo-admonition 插件使用示例
    这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 todo，并设置了自定义标题。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;提示内容开头留 4 个空格，可以有多行，最后用空行结束此标记。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;!!! attention Hexo-admonition 插件使用示例
    这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 attention，并设置了自定义标题。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;提示内容开头留 4 个空格，可以有多行，最后用空行结束此标记。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
                <link>https://samzong.me/post/2022/05/hexo-admonition.html</link>
                <guid>https://samzong.me/post/2022/05/hexo-admonition</guid>
                <pubDate>Sat, 28 May 2022 17:27:18 -0500</pubDate>
        </item>

        <item>
                <title>国内环境搭建 MacOS K8s 开发环境</title>
                <description>&lt;h2 id=&quot;minikube&quot;&gt;Minikube&lt;/h2&gt;

&lt;p&gt;在 Mac 上搭建开发环境，这里主要使用了 Kubernetes 官方推荐的 minikube 和 docker-for-desktop 环境&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;minikube start &lt;span class=&quot;nt&quot;&gt;--image-mirror-country&lt;/span&gt; cn &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--registry-mirror&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://vbj8usl3.mirror.aliyuncs.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
                <link>https://samzong.me/post/2022/05/%E5%9B%BD%E5%86%85%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-MacOS-K8s-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83.html</link>
                <guid>https://samzong.me/post/2022/05/国内环境搭建-MacOS-K8s-开发环境</guid>
                <pubDate>Tue, 17 May 2022 05:09:02 -0500</pubDate>
        </item>

        <item>
                <title>MacOS隐藏Dock栏中特定应用</title>
                <description>&lt;h2 id=&quot;背景说明&quot;&gt;背景说明&lt;/h2&gt;

&lt;p&gt;MacOS Dock 栏的空间是有限的，而且绝大部分应用都会占用一个 Dock 的槽位；但并不是所有软件都提供了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hidden  in Dock&lt;/code&gt; 的能力，所以从来不点击，但一直存在，挺痛苦的。&lt;/p&gt;

&lt;p style=&quot;color:red;font-size=16px&quot;&gt;为不具备隐藏 Dock Icon 的应用附加隐藏能力&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;符合这类特征的软件： a. 常驻应用，开机自启动，基本不会打开； b. 像我这样的 Alfred 爱好者&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;之前了解到一些软件对系统的影响都比较大，基本上都是要接管 整个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dock&lt;/code&gt;，要关闭 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SIP&lt;/code&gt;，使用成本太好，基本不值得采用。&lt;/p&gt;

&lt;h2 id=&quot;全球同性交友网站&quot;&gt;全球同性交友网站&lt;/h2&gt;

&lt;p&gt;下午在闲逛的时候，发现了这个仓库： https://github.com/FirePanther/MacOS-Hide-Dock-Icon ，一个非常简单的 PHP 脚本，貌似可以提供这个能力，于是我就简单的 Download ，按照 README.md 的方法执行了一下。&lt;/p&gt;

&lt;p&gt;很神奇的！ 满足了我的需求！ 所以，我在这里记录和分享给大家，如果你也需要的话。&lt;/p&gt;

&lt;h2 id=&quot;操作步骤&quot;&gt;操作步骤&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;当然，你也可以直接 从这切换到 官方仓库的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README.md&lt;/code&gt; 去操作&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 下载 脚本文件&lt;/span&gt;
➜  ~ wget https://raw.githubusercontent.com/FirePanther/MacOS-Hide-Dock-Icon/master/hideDockIcon.php &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; hideDockIcon.php

&lt;span class=&quot;c&quot;&gt;# 备份地址&lt;/span&gt;
➜  ~ wget https://raw.githubusercontent.com/SAMZONG/MacOS-Hide-Dock-Icon/master/hideDockIcon.php &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; hideDockIcon.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;确保你的 Mac 内装有 PHP&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;php   &lt;span class=&quot;c&quot;&gt;# just one command&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接下就是操作步骤了： 在此之前，你需要完全退出被隐藏的软件**&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/image-20220507152104232.png?x-oss-process=image/resize,w_960,m_lfit&quot; alt=&quot;image-20220507152104232&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下方是脚本的执行过程：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  ~ &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;php hideDockIcon.php
App name: BaiduNetdisk_mac
Cracking app BaiduNetdisk_mac
Info.plist successfully injected
Signing &lt;span class=&quot;nt&quot;&gt;------&lt;/span&gt;
/Applications/BaiduNetdisk_mac.app: replacing existing signature
&lt;span class=&quot;nt&quot;&gt;------&lt;/span&gt;

Finished  &lt;span class=&quot;c&quot;&gt;# 看到这个就是成功了&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行成功后，再次打开App，App会先在Dock栏跳动加载，加载完后图标自动消失，但App依旧在运行。&lt;/p&gt;

&lt;p&gt;以上，你就成功的隐藏这个需要的软件，经过在测试，脚本的健壮性很好:&lt;/p&gt;

&lt;p&gt;支持的 PC : &lt;strong&gt;2022 年 M1 Max MacOS12.3.1&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;注意事项&quot;&gt;注意事项&lt;/h2&gt;

&lt;h3 id=&quot;确认对的-app-name&quot;&gt;确认对的 App Name&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/image-20220507153226027.png?x-oss-process=image/resize,w_960,m_lfit&quot; alt=&quot;image-20220507153226027&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;恢复被隐藏的应用&quot;&gt;恢复被隐藏的应用&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;首先 &amp;gt;&lt;/strong&gt; 还是要退出App，这时Dock栏也不显示了，菜单栏也没有，所以不好使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;邮件退出的方式&lt;/code&gt;，那么接下来我们要找到下方这个软件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/image-20220507153525040.png?x-oss-process=image/resize,w_960,m_lfit&quot; alt=&quot;image-20220507153525040&quot; /&gt;&lt;/p&gt;

&lt;p&gt;打开软件后，等待加载完成，通过搜索窗口利用 App name 找到被隐藏的软件&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/image-20220507154000558.png?x-oss-process=image/resize,w_960,m_lfit&quot; alt=&quot;image-20220507154000558&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后使用上方的，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;X&lt;/code&gt; 关闭按钮，在弹窗中，选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Quit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后 &amp;gt; 再去执行下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hideDockIcon.php&lt;/code&gt; 这个脚本:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;php hideDockIcon.php
Password:
App name: BaiduNetDisk_mac
Cracking app BaiduNetDisk_mac
This app should be invisible &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the Dock
Would you like to show it? &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;y/n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; y
Info.plist successfully injected
Signing &lt;span class=&quot;nt&quot;&gt;------&lt;/span&gt;
/Applications/BaiduNetDisk_mac.app: replacing existing signature
&lt;span class=&quot;nt&quot;&gt;------&lt;/span&gt;

Finished
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后再次启动 App，那么就会出现在 Dock 栏并且不再隐藏&lt;/p&gt;

&lt;h2 id=&quot;结语&quot;&gt;结语&lt;/h2&gt;

&lt;p&gt;没事儿还是要逛逛 Github&lt;/p&gt;

</description>
                <link>https://samzong.me/post/2022/05/MacOS%E9%9A%90%E8%97%8FDock%E6%A0%8F%E4%B8%AD%E7%89%B9%E5%AE%9A%E5%BA%94%E7%94%A8.html</link>
                <guid>https://samzong.me/post/2022/05/MacOS隐藏Dock栏中特定应用</guid>
                <pubDate>Sat, 07 May 2022 09:57:54 -0500</pubDate>
        </item>

        <item>
                <title>满足预期的文档站 Mkdocs</title>
                <description>&lt;h2 id=&quot;组合三件套&quot;&gt;组合三件套&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Mkdocs	# 热门的静态博客框架&lt;/li&gt;
  &lt;li&gt;Mkdocs-material	# Mkdocs 颜值担当的主题&lt;/li&gt;
  &lt;li&gt;MkDocs Awesome Pages Plugin   # Mkdocs 动态的 Navgation 插件&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;依赖的插件&quot;&gt;依赖的插件&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mkdocs 
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mkdocs-material 
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mkdocs-git-revision-date-plugin 
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mkdocs-mermaid2-plugin 
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mkdocs-rss-plugin 
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mkdocs-minify-plugin 
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mkdocs-macros-plugin 
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mkdocs-git-revision-date-localized-plugin 
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mkdocs-awesome-pages-plugin 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;github-repo&quot;&gt;Github repo&lt;/h3&gt;

&lt;p&gt;Private Teamplate https://github.com/SAMZONG/mkdocs-template&lt;/p&gt;

&lt;h3 id=&quot;awesome-plugin-常用参数&quot;&gt;Awesome Plugin 常用参数&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;在文档内的路径展示&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;sb&quot;&gt;```&lt;/span&gt;sh
docs
├── .pages.yaml     &lt;span class=&quot;c&quot;&gt;# 站点顶部导航配置文件，控制顺序和名称，一般不增加&lt;/span&gt;
├── README.md       &lt;span class=&quot;c&quot;&gt;# 默认情况下 目录下 README.md 作为 default 页面&lt;/span&gt;
├── SUMMARY.md
├── dce5.0          &lt;span class=&quot;c&quot;&gt;# 子文件夹，支持多级目录，自动检测配置&lt;/span&gt;
│   ├── .pages.yaml
│   ├── 01kpanda.md &lt;span class=&quot;c&quot;&gt;# 子文件自动检测，可以通过文件名前缀数字控制排序&lt;/span&gt;
│   ├── 02ghippo.md
│   ├── 03clusterpedia.md
│   ├── ...
├── design
│   ├── .pages.yaml &lt;span class=&quot;c&quot;&gt;# 每个目录下都有一个 `.pages.yaml` 用来进行目录的配置&lt;/span&gt;
│   ├── README.md
│   ├── ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过对每个文件下的特定处理，默认情况下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.pages.yaml&lt;/code&gt; 为空即可，如需要特殊处理，可以在文档添加下方参数:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Products&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# 文件夹展示的标题&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;# 文件夹的顺序，数字越小越靠前&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;# 是否隐藏，默认不隐藏&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;nav&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;# 采用自定义导航&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;filename.md&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;filename2.md&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nav&lt;/code&gt; 的配置方式，还有更多高级用法，可以参考插件做的的 Github 介绍 &lt;a href=&quot;https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin#customize-navigation&quot;&gt;传送门&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;mkdocsyaml-的配置变更&quot;&gt;mkdocs.yaml 的配置变更&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;不要设定 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nav&lt;/code&gt; OR &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plugin&lt;/code&gt; 增加下方配置&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;awesome-pages&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;.pages.yaml&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;collapse_single_pages&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;strict&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
                <link>https://samzong.me/post/2022/05/%E6%BB%A1%E8%B6%B3%E9%A2%84%E6%9C%9F%E7%9A%84%E6%96%87%E6%A1%A3%E7%AB%99-Mkdocs.html</link>
                <guid>https://samzong.me/post/2022/05/满足预期的文档站-Mkdocs</guid>
                <pubDate>Fri, 06 May 2022 12:25:04 -0500</pubDate>
        </item>

        <item>
                <title>Alfred Workflow 推荐</title>
                <description>&lt;h2 id=&quot;alfred-介绍&quot;&gt;Alfred 介绍&lt;/h2&gt;

&lt;p&gt;Alfred 是 Mac 上一款著名的效率应用，强大的功能和众多的扩展能让你在实际操作中大幅提升工作效率，网络上也有大量关于的 Alfred 的评测和技巧的文章。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.sspai.com/attachment/origin/2016/02/19/311872.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;workflow-介绍&quot;&gt;Workflow 介绍&lt;/h2&gt;

&lt;p&gt;Workflow 工作流；将一件事情的多个步骤，通过一个的规则相连，并依次执行，最终完成，这个方式就是工作流； Alfred Workflow 就是一个将我们日常工作流 实现的一个工具，可以让我们在 Alfred 中更加方便的完成我们的工作；现实生活中的工作流可能更为复杂，但本质还是如此。正是基于这种现实背景，alfred 从 2.0 版本起加入了 workflow，简单的示例说明。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/mUZ6OI.png?x-oss-process=image/resize,w_960,m_lfit&quot; alt=&quot;mUZ6OI&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;我的推荐&quot;&gt;我的推荐&lt;/h2&gt;

&lt;p&gt;整理常用的一些 Workflow 分享, 提高工作和生活的效率小技巧。&lt;/p&gt;

&lt;h3 id=&quot;5-星推荐&quot;&gt;5 星推荐&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.packal.org/workflow/timezones-2&quot;&gt;https://www.packal.org/workflow/timezones-2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.packal.org/workflow/homebrew-and-cask-alfred&quot;&gt;https://www.packal.org/workflow/homebrew-and-cask-alfred&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.packal.org/workflow/mac-app-store-search&quot;&gt;https://www.packal.org/workflow/mac-app-store-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/xiaotu9639/alfred-yuque-workflow&quot;&gt;https://github.com/xiaotu9639/alfred-yuque-workflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/whyliam/whyliam.workflows.youdao&quot;&gt;https://github.com/whyliam/whyliam.workflows.youdao&lt;/a&gt; 有道翻译
    &lt;ul&gt;
      &lt;li&gt;zhiyu_id: 12ba82650be566f5&lt;/li&gt;
      &lt;li&gt;zhiyu_key:XWkQjLboE4llgQuWZMR1e0d03Au9w8ob&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-星推荐&quot;&gt;4 星推荐&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.packal.org/workflow/alfred-markdown-table&quot;&gt;https://www.packal.org/workflow/alfred-markdown-table&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.packal.org/workflow/pretty-json&quot;&gt;https://www.packal.org/workflow/pretty-json&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.packal.org/workflow/who&quot;&gt;https://www.packal.org/workflow/who&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;如何获取-workflow-&quot;&gt;如何获取 Workflow ?&lt;/h2&gt;

&lt;p&gt;可以到这个网站 https://www.packal.org/  有非常丰富的 Workflow 或者 主题可以选择，丰富你的 Alfred 使用&lt;/p&gt;

&lt;p&gt;如果你有能力制作一些优秀的 Workflow ，也可以在这里分享&lt;/p&gt;

&lt;h2 id=&quot;更多关于-alfred-的使用教程&quot;&gt;更多关于 Alfred 的使用教程&lt;/h2&gt;

&lt;p&gt;网络上已经有大量的 视频和文本的使用教程了，所以我这里直接引用我学习时使用的教程&lt;/p&gt;

&lt;h2 id=&quot;视频教程&quot;&gt;视频教程&lt;/h2&gt;

&lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;//player.bilibili.com/player.html?aid=894481262&amp;amp;bvid=BV1GP4y1g7HJ&amp;amp;cid=700510300&amp;amp;page=1&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;

&lt;h2 id=&quot;文本教程&quot;&gt;文本教程&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ihtcboy.com/2020/02/09/2020-02-09_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9A%E9%AB%98%E6%95%88Alfred%E8%BF%9B%E9%98%B6/&quot;&gt;程序员的macOS系列：高效Alfred进阶&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;同时，也推荐下这位优秀博主，如果关注 iOS 开发，可以关注他更新的内容&lt;/p&gt;
</description>
                <link>https://samzong.me/post/2022/05/Alfred-Workflow-%E6%8E%A8%E8%8D%90.html</link>
                <guid>https://samzong.me/post/2022/05/Alfred-Workflow-推荐</guid>
                <pubDate>Tue, 03 May 2022 15:14:49 -0500</pubDate>
        </item>

        <item>
                <title>youtube-dl 下载 YouTube 视频</title>
                <description>&lt;blockquote&gt;
  &lt;p&gt;截止 2022.5 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;youtube-dl&lt;/code&gt; 已经较长时间未更新了，建议采用 &lt;a href=&quot;https://github.com/yt-dlp/yt-dlp&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yt-dlp&lt;/code&gt;&lt;/a&gt;, 将命令进行替换即可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;安装新版本的-yt-dlp&quot;&gt;安装新版本的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yt-dlp&lt;/code&gt;&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;yt-dlp/taps/yt-dlp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yt-dlp&lt;/code&gt; 是从 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;youtube-dl&lt;/code&gt; 分支出来的版本，提供持续更新和向前兼容，在友好型上做了优化；仅需要将所有安装命令中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;youtube-dl&lt;/code&gt; 替换为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yt-dlp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果你还是喜欢使用 youtube-dl，可以使用以下命令将程序默认替换，同时不影响你的使用:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  ~ &lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;youtube-dl&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;yt-dlp
➜  ~ &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;alias youtube-dl=yt-dlp&quot;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.zshrc  &lt;span class=&quot;c&quot;&gt;# or ~/.bashrc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/JwWiwh.png?x-oss-process=image/resize,w_960,m_lfit&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;youtube-dl-下载-youtube-视频&quot;&gt;youtube-dl 下载 YouTube 视频&lt;/h2&gt;

&lt;p&gt;视频下载命令行工具里，网友推荐通常都是『国外视频用 youtube-dl』，有这两个工具国内外主流视频网站的视频基本就横扫了，适合想收藏或者喜欢下载后用本地播放器的 Geek 群体。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://rg3.github.io/youtube-dl/download.html&quot;&gt;youtube-dl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;命令行工具本身其实不复杂，理解了它们的语法就能开始使用了，结合 Alfred 还可以把常用的命令设置成触发的动作，提升交互体验和效率。然而很多人一看网站的介绍估计和我最初的感受差不多，还要部署一堆使用环境啊。&lt;/p&gt;

&lt;h2 id=&quot;xcode-的命令行工具&quot;&gt;Xcode 的命令行工具&lt;/h2&gt;

&lt;p&gt;Homebrew 环境安装前先检查一下 Xcode 的命令行工具是否已经安装，如果 macOS 系统更新过可能也需要重新安装一次，「终端」（应用程序 - 实用工具 - 终端）中输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xcode-select --install&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  ~ xcode-select &lt;span class=&quot;nt&quot;&gt;--install&lt;/span&gt;
xcode-select: error: &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;line tools are already installed, use &lt;span class=&quot;s2&quot;&gt;&quot;Software Update&quot;&lt;/span&gt; to &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;updates
➜  ~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;先前配置时已经安装过 Xcode 命令行工具，所以会出现上面的提示信息。&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;homebrew-依赖&quot;&gt;Homebrew 依赖&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://brew.sh/index_zh-cn.html&quot;&gt;Homebrew&lt;/a&gt; 是一个macOS 上的软件包管理工具，通过命令行的方式安装和卸载软件，大部分的流行软件都提供了 Homebrew 的安装方式，也是开源世界里安装和更新软件的主流方式；&lt;/p&gt;

&lt;h3 id=&quot;homebrew&quot;&gt;&lt;a href=&quot;https://brew.sh/index_zh-cn.html&quot;&gt;Homebrew&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;只需要在联网的情况下运行一行命令：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/bin/ruby &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;更多关于 Homebrew 的使用相关，可以查看我的另一篇文章  &lt;a href=&quot;https://samzong.me/2022/05/03/Mac%E4%B8%8Bhomebrew%E7%9A%84%E4%BD%BF%E7%94%A8/&quot;&gt;Mac 下 Homebrew 的使用&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;安装-youtube-dl&quot;&gt;安装 youtube-dl&lt;/h2&gt;

&lt;p&gt;上面刚学习到的命令可以先用起来，先看看 youtube-dl 的软件信息，在终端里输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew info youtube-dl&lt;/code&gt;，了解一下 youtube-dl 的依存环境和需要搭档的其他应用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/S4sQmN.png?x-oss-process=image/resize,w_960,m_lfit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从终端运行的反馈能看到，youtube-dl 的使用环境是 Python3，合并视频片断还会用到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffmpeg&lt;/code&gt;  这个组件，也就是说安装完 youtube-dl，还要再运行一次 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew install ffmpeg&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;youtube-dl
brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ffmpeg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;youtube-dl-的基本用法&quot;&gt;youtube-dl 的基本用法&lt;/h2&gt;

&lt;p&gt;前 3 步结束已经可以用命令行下载视频了，这里介绍几个常用的命令，更多的命令用法在官网都有介绍 ，查看 Github 更全的操作指引 &lt;a href=&quot;https://github.com/ytdl-org/youtube-dl/blob/master/README.md#description&quot;&gt;Document&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  ~ youtube-dl &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;Options
Options:
  General Options:
  Network Options:
  Download Options:
  Filesystem Options:
  Thumbnail Options:
  Verbosity / Simulation Options:
  Video Format Options:
  Subtitle Options:
  Authentication Options:
  Adobe Pass Options:
  Post-processing Options:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;导出视频指定文件名称&quot;&gt;导出视频指定文件名称&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl https://www.youtube.com/watch?v&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Ga4UCK627nU &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~/Downloads/aaa.mp4&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;youtube-dl&lt;/code&gt; 还提供了 一些变量的方式，可以作用在文件名上，比较常用的如下：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# %(title)s.%(ext)s 则是指定了文件名的格式，%(title)s 是视频的标题，%(ext)s 则是视频的文件扩展名&lt;/span&gt;
youtube-dl https://www.youtube.com/watch?v&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Ga4UCK627nU &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~/Downloads/%(title)s.%(ext)s&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;视频名.扩展名&lt;/code&gt; 这样可以规范化导出文档的名称；还有其他非常丰富的变量支持，可以去这里找到你想要的 &lt;a href=&quot;https://github.com/ytdl-org/youtube-dl/blob/master/README.md#output-template&quot;&gt;Output Template&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;查询视频支持的版本&quot;&gt;查询视频支持的版本&lt;/h3&gt;

&lt;p&gt;导出的画质不如意，希望自定义导出画质，可以采用这个方式，使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-F&lt;/code&gt; 查看视频资源支持的类型，通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-f&lt;/code&gt; 指定对应的版本进行下载&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/eUUy9N.png?x-oss-process=image/resize,w_960,m_lfit&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  ~ youtube-dl &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; https://www.youtube.com/watch&lt;span class=&quot;se&quot;&gt;\?&lt;/span&gt;v&lt;span class=&quot;se&quot;&gt;\=&lt;/span&gt;BYkHLlKFEsM
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;youtube] BYkHLlKFEsM: Downloading webpage
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info] Available formats &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;BYkHLlKFEsM:
format code  extension  resolution note
249          webm       audio only tiny   53k , webm_dash container, opus @ 53k &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;48000Hz&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 2.44MiB
250          webm       audio only tiny   70k , webm_dash container, opus @ 70k &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;48000Hz&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 3.22MiB
140          m4a        audio only tiny  129k , m4a_dash container, mp4a.40.2@129k &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;44100Hz&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 5.93MiB
251          webm       audio only tiny  136k , webm_dash container, opus @136k &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;48000Hz&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 6.27MiB
160          mp4        256x144    144p   32k , mp4_dash container, avc1.4d400c@  32k, 30fps, video only, 1.48MiB
278          webm       256x144    144p   75k , webm_dash container, vp9@  75k, 30fps, video only, 3.45MiB
133          mp4        426x240    240p   48k , mp4_dash container, avc1.4d4015@  48k, 30fps, video only, 2.21MiB
242          webm       426x240    240p   76k , webm_dash container, vp9@  76k, 30fps, video only, 3.51MiB
134          mp4        638x360    360p   80k , mp4_dash container, avc1.4d401e@  80k, 30fps, video only, 3.70MiB
243          webm       638x360    360p  115k , webm_dash container, vp9@ 115k, 30fps, video only, 5.28MiB
135          mp4        852x480    480p  120k , mp4_dash container, avc1.4d401f@ 120k, 30fps, video only, 5.50MiB
244          webm       852x480    480p  161k , webm_dash container, vp9@ 161k, 30fps, video only, 7.41MiB
136          mp4        1278x720   720p  217k , mp4_dash container, avc1.4d401f@ 217k, 30fps, video only, 9.97MiB
247          webm       1278x720   720p  273k , webm_dash container, vp9@ 273k, 30fps, video only, 12.52MiB
248          webm       1916x1080  1080p  896k , webm_dash container, vp9@ 896k, 30fps, video only, 41.01MiB
137          mp4        1916x1080  1080p  923k , mp4_dash container, avc1.640028@ 923k, 30fps, video only, 42.24MiB
18           mp4        638x360    360p  350k , avc1.42001E, 30fps, mp4a.40.2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;44100Hz&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 16.07MiB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;best&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

➜  ~ youtube-dl &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 137 https://www.youtube.com/watch&lt;span class=&quot;se&quot;&gt;\?&lt;/span&gt;v&lt;span class=&quot;se&quot;&gt;\=&lt;/span&gt;BYkHLlKFEsM  &lt;span class=&quot;c&quot;&gt;# 下载对应的 format code&lt;/span&gt;
➜  ~ youtube-dl &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; best https://www.youtube.com/watch&lt;span class=&quot;se&quot;&gt;\?&lt;/span&gt;v&lt;span class=&quot;se&quot;&gt;\=&lt;/span&gt;BYkHLlKFEsM  &lt;span class=&quot;c&quot;&gt;# 下载最佳的版本&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;仅导出音频文件&quot;&gt;仅导出音频文件&lt;/h3&gt;

&lt;p&gt;:::information_source: 经常拿过来做个人的歌曲库导出，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;youtube-dl -x&lt;/code&gt; 提供了 -x 参数来进行指定 仅导出音频，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--extract-audio&lt;/code&gt; 这里需要使用到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffmpeg&lt;/code&gt; 。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; https://www.youtube.com/watch?v&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Ga4UCK627nU &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~/Downloads/%(title)s.%(ext)s&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;默认下载的音频文件类型，可能无法满足你，这个时候，可以使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--audio-format&lt;/code&gt; 参数，来指定对应的音频格式（使用 ffmpeg 自动转码），目前支持个格式类型有：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Specify audio format: &lt;span class=&quot;s2&quot;&gt;&quot;best&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;aac&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;flac&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;mp3&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;m4a&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;opus&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;vorbis&quot;&lt;/span&gt;,or &lt;span class=&quot;s2&quot;&gt;&quot;wav&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;best&quot;&lt;/span&gt; by default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; https://www.youtube.com/watch?v&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Ga4UCK627nU &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~/Downloads/%(title)s.%(ext)s&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--audio-format&lt;/span&gt; mp3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
                <link>https://samzong.me/post/2022/05/youtube-dl-%E4%B8%8B%E8%BD%BD-YouTube-%E8%A7%86%E9%A2%91.html</link>
                <guid>https://samzong.me/post/2022/05/youtube-dl-下载-YouTube-视频</guid>
                <pubDate>Tue, 03 May 2022 08:57:28 -0500</pubDate>
        </item>

        <item>
                <title>GitHub Pages 的妙用</title>
                <description>&lt;h2 id=&quot;本来是想好好工作的&quot;&gt;本来是想好好工作的&lt;/h2&gt;

&lt;p&gt;最近换了新工作（后面找个时间好好说说），大量接触 k8s &amp;amp; docker，开始写了比较多的 yaml 和 Dockerfile；散落在电脑上的话，还是很不方便，有个仓库管理起来的话，就会很方便了，于是有了这个项目 &lt;a href=&quot;https://github.com/SAMZONG/k8s-yaml&quot;&gt;samzong/k8s-yaml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;k8s-yaml 一开始的定义就是 public ，希望给更多其他的人提供帮助，索性就再增加了一个网页吧&lt;/p&gt;

&lt;h2 id=&quot;一分钟快速搭建网站&quot;&gt;一分钟快速搭建网站&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch gh-pages
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;## Hello gh-pages&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; index.md
git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;eeen…. 这样就 ok ！&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; 是每个 GitHub 仓库的默认 github pages 分支，当你创建这个分支并推动到 GitHub 时，会自动触发 Pages 的构建任务，大约30s 左右，你就会得到一个网站&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;http://[github_username].github.io/[github_repo_name]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;简单的配置&quot;&gt;简单的配置&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/X4tbDt.png?x-oss-process=image/resize,w_960,m_lfit&quot; alt=&quot;X4tbDt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图简单指引了如何打开 GitHub Pages 的配置路径，下面对主要的几个模块进行说明:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Source  - 指定的 以那个分支作为 built 源和文件夹，默认是 gh-pages, 建议不动，统一认知&lt;/li&gt;
  &lt;li&gt;Theme Chooser - 选择对应的博客主题，大概有 10 个，都比较普通，根据自己喜好来，可以自定义，这里不展开 (Google Jekyll themes 一大堆&lt;/li&gt;
  &lt;li&gt;Custom Domain - 可以指定默认的特定的域名，需要配置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/CNAME&lt;/code&gt;，需要和这里的域名一致，同时域名解析需要配置好 CNAME&lt;/li&gt;
  &lt;li&gt;Enforce HTTPS - 启用 HTTPS，默认不启动，建议启用&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;CNAME 配置，将指定的域名指向到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[github_username].github.io&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;经过简单的配置，这个仓库的网站，已经完成了你想要的； 在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.md&lt;/code&gt; 内修改为你想要的内容。&lt;/p&gt;

&lt;h2 id=&quot;高级功能结合-github-issue-的评论功能&quot;&gt;高级功能：结合 GitHub issue 的评论功能&lt;/h2&gt;

&lt;p&gt;这里采用的 评论组件是 &lt;a href=&quot;https://utteranc.es/&quot;&gt;utterances&lt;/a&gt;, 提供轻量级的博客评论功能，并且评论是直接创建 GitHub issue，方便管理&lt;/p&gt;

&lt;p&gt;这里不赘述安装细节的，比较简单，直接去看下面几个网站即可&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://utteranc.es/&lt;/li&gt;
  &lt;li&gt;https://roife.github.io/2021/02/12/use-utterances-for-comment/&lt;/li&gt;
  &lt;li&gt;https://www.evanlin.com/jekyll-remove-disqus/&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意需要增加的文件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-md highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir _layouts
wget https://raw.githubusercontent.com/SAMZONG/k8s-yaml/gh-pages/_layouts/post.html -o _layouts/post.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;index.md 增加 layout 参数，追加在最顶部&lt;/p&gt;

&lt;div class=&quot;language-md highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add _layouts/post.html
git add index.md

git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;add comment module with utterances&quot;&lt;/span&gt;
git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;end&quot;&gt;End&lt;/h2&gt;

&lt;p&gt;以上就是全部的部署内容了，可以去看下我的网站和项目&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://k8s-yaml.samzong.me&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果你觉得喜欢，求 fork，求 star&lt;/p&gt;
</description>
                <link>https://samzong.me/post/2022/04/GitHub-Pages-%E7%9A%84%E5%A6%99%E7%94%A8.html</link>
                <guid>https://samzong.me/post/2022/04/GitHub-Pages-的妙用</guid>
                <pubDate>Fri, 22 Apr 2022 12:23:00 -0500</pubDate>
        </item>

        <item>
                <title>需要了解的 K8s 发行版本</title>
                <description>&lt;h2 id=&quot;k8s-的发行版本&quot;&gt;K8s 的发行版本&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/6ngC8v.png&quot; alt=&quot;6ngC8v&quot; /&gt;&lt;/p&gt;

&lt;p&gt;开始学习喜欢的东西，上面的每一个都要了解&lt;/p&gt;
</description>
                <link>https://samzong.me/post/2022/04/%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84%E7%AB%9E%E5%93%81.html</link>
                <guid>https://samzong.me/post/2022/04/需要了解的竞品</guid>
                <pubDate>Tue, 19 Apr 2022 13:11:00 -0500</pubDate>
        </item>

        <item>
                <title>CKA 考试准备</title>
                <description>&lt;h2 id=&quot;汇总&quot;&gt;汇总&lt;/h2&gt;

&lt;p&gt;本来预计 4 月 10 号左右，可以开始准备 CKA 的考试了，因为疫情在家办公，再加上报名去做志愿者，所以这个时间耽搁到了现在才开始&lt;/p&gt;

&lt;h3 id=&quot;时间成本&quot;&gt;时间成本&lt;/h3&gt;

&lt;p&gt;在这里记录下整个学习过程，也给大家预估下，不走培训机构，自学大概需要多久的时间&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;时间&lt;/th&gt;
      &lt;th&gt;事项&lt;/th&gt;
      &lt;th&gt;耗费时间&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;2022-04-16&lt;/td&gt;
      &lt;td&gt;了解什么是 CKA 和考试内容,捡起来 Docker 的知识, 个人项目转为 Docker Image 并推送到 dockerhub&lt;/td&gt;
      &lt;td&gt;1d&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2022-04-17&lt;/td&gt;
      &lt;td&gt;在个人电脑上成功运行起来 K8s 的环境，并完成个人项目部署&lt;/td&gt;
      &lt;td&gt;1d&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;体会&quot;&gt;体会&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;有段时间没回过头来弄代码了，平时写比较多是项目上的小脚本，系统化把一个项目改造为 Docker image，再来了一遍，整个优化过程的感觉还是很舒服的&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;学习资料&quot;&gt;学习资料&lt;/h2&gt;

&lt;h3 id=&quot;培训机构的大纲&quot;&gt;培训机构的大纲&lt;/h3&gt;

&lt;p&gt;大致培训时间是 3 天，给自己预估的学习时间大概是 一周左右的时间&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CKA最新考纲解读与Kubernetes入门（Day 1/上午）
    &lt;ul&gt;
      &lt;li&gt;CKA考试大纲解读&lt;/li&gt;
      &lt;li&gt;Kubernetes基本概念与应用场景&lt;/li&gt;
      &lt;li&gt;Kubernetes主要功能特性、集群架构与组件&lt;/li&gt;
      &lt;li&gt;使用kubeadm安装集群与版本升级&lt;/li&gt;
      &lt;li&gt;etcd数据备份与还原&lt;/li&gt;
      &lt;li&gt;kubectl使用、shell自动补&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Kubernetes工作负载、调度与Helm（Day 1/下午）
    &lt;ul&gt;
      &lt;li&gt;Pod基本操作、生命周期、回调与探针&lt;/li&gt;
      &lt;li&gt;初始化与临时容器&lt;/li&gt;
      &lt;li&gt;使用Deployment部署自修复无状态服务&lt;/li&gt;
      &lt;li&gt;使用Deployment滚动更新/回滚/扩缩无状态服务&lt;/li&gt;
      &lt;li&gt;使用StatefulSet部署有状态服务&lt;/li&gt;
      &lt;li&gt;使用DaemonSet部署守护进程&lt;/li&gt;
      &lt;li&gt;深入理解控制器工作原理&lt;/li&gt;
      &lt;li&gt;使用ConfigMaps和Secrets配置应用程序&lt;/li&gt;
      &lt;li&gt;Kubernetes调度策略实践&lt;/li&gt;
      &lt;li&gt;资源限制如何影响Pod调度&lt;/li&gt;
      &lt;li&gt;理解调度器工作原理&lt;/li&gt;
      &lt;li&gt;各种调度策略使用场景总结&lt;/li&gt;
      &lt;li&gt;使用Helm部署/升级/回滚/下线服务&lt;/li&gt;
      &lt;li&gt;Helm回调与Chart编写&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Kubernetes服务与网络（Day 2/上午）
    &lt;ul&gt;
      &lt;li&gt;定义Service与Endpoint&lt;/li&gt;
      &lt;li&gt;Service Iptables与IPVS代理模式&lt;/li&gt;
      &lt;li&gt;通过Service名称与ClusterIP集群内互访&lt;/li&gt;
      &lt;li&gt;通过NodePort、Ingress、LoadBalancer集群外访问&lt;/li&gt;
      &lt;li&gt;CoreDNS原理介绍&lt;/li&gt;
      &lt;li&gt;配置和使用CoreDNS&lt;/li&gt;
      &lt;li&gt;同Pod/同Node/跨Node/跨集群互通性&lt;/li&gt;
      &lt;li&gt;常见网络接口插件工作原理与适用场景&lt;/li&gt;
      &lt;li&gt;常见网络故障排查&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Kubernetes存储与安全（Day 2/下午）
    &lt;ul&gt;
      &lt;li&gt;Volume、PV、PVC、StorageClass&lt;/li&gt;
      &lt;li&gt;卷模式、访问模式和卷回收策略&lt;/li&gt;
      &lt;li&gt;理解持久容量声明原语&lt;/li&gt;
      &lt;li&gt;了解如何配置具有持久性存储的应用程序&lt;/li&gt;
      &lt;li&gt;认证、授权与鉴权&lt;/li&gt;
      &lt;li&gt;管理基于角色的访问控制（RBAC）&lt;/li&gt;
      &lt;li&gt;Pod和容器操作权限安全策略&lt;/li&gt;
      &lt;li&gt;Network Policy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Kubernetes监控日志、故障排查（Day 3/上午）
    &lt;ul&gt;
      &lt;li&gt;如何监控一个Kubenetes应用&lt;/li&gt;
      &lt;li&gt;查看与管理集群和节点日志&lt;/li&gt;
      &lt;li&gt;管理容器标准输出和标准错误日志&lt;/li&gt;
      &lt;li&gt;如何解决应用程序故障&lt;/li&gt;
      &lt;li&gt;对群集组件故障进行故障排除&lt;/li&gt;
      &lt;li&gt;Kubernetes其他常见问题定位&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CKA考试注意事项与模拟演练（Day 3/下午）
    &lt;ul&gt;
      &lt;li&gt;CKA真题演练与解析【重点】&lt;/li&gt;
      &lt;li&gt;CKA考试注意事项及应试答疑&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>https://samzong.me/post/2022/04/CKA-%E8%80%83%E8%AF%95%E5%87%86%E5%A4%87.html</link>
                <guid>https://samzong.me/post/2022/04/CKA-考试准备</guid>
                <pubDate>Mon, 18 Apr 2022 01:00:00 -0500</pubDate>
        </item>

        <item>
                <title>Dockerfile Run at M1 processor build failed</title>
                <description>&lt;h2 id=&quot;apple-m1-processor&quot;&gt;Apple M1 processor&lt;/h2&gt;

&lt;p&gt;在使用了 Apple M1 的笔记本后，在 docker 使用遇到了一些问题，这里做些笔记记录下来&lt;/p&gt;

&lt;h2 id=&quot;pull-image-error&quot;&gt;pull image error&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Error “no matching manifest for linux/arm64/v8 in the manifest list entries”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在我尝试想要 pull 下来时，得到上面的一个错误；同样的问题，我在编写 Dockerfile 和 docker-compose.yml 都遇到这样的问题&lt;/p&gt;

&lt;h3 id=&quot;docker-composeyml&quot;&gt;docker-compose.yml&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.9'&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Database&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mysql-server:5.7&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;db_data:/var/lib/mysql&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pass&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_DATABASE&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wp&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wp&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wp&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wpsite&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;解决思路&quot;&gt;解决思路&lt;/h3&gt;

&lt;p&gt;需要指定下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plaform&lt;/code&gt; ，当我运行在 Apple M1上，变更部分如下：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;services:
  # Database
  db:
    platform: linux/x86_64  # set platform
    image: mysql-server:5.7
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果只是在 docker pull 时，增加指定参数即可：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull &lt;span class=&quot;nt&quot;&gt;--plaform&lt;/span&gt; linux/x84_64 mysql-server:5.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
                <link>https://samzong.me/post/2022/04/Docker-Run-at-Apple-Silicon-M1.html</link>
                <guid>https://samzong.me/post/2022/04/Docker-Run-at-Apple-Silicon-M1</guid>
                <pubDate>Sun, 17 Apr 2022 15:32:00 -0500</pubDate>
        </item>

        <item>
                <title>Metabase 上手 - 使用 Jar 运行</title>
                <description>&lt;h2 id=&quot;metabase-documentation&quot;&gt;Metabase Documentation&lt;/h2&gt;

&lt;p&gt;这里主要是 metabase 的部署和使用方法，以及相关的组件的使用方法。&lt;/p&gt;

&lt;p&gt;我正在打造一个中文环境下 Metabase 交互的社群，如果你有任何关于 Metabase 的问题，请联系我们：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Metabase 中文交流 &lt;strong&gt;https://t.me/metabase_zh&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Metabase 的安装方式有三种：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;以Jar包的形式，在本地运行，只需要简单的步骤即可 &lt;strong&gt;(本文)&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;以 Docker 容器的形式，部署到服务器上&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以Jar的方式来运行相对简单，对环境依赖也是比较少，只要的电脑上有 JDK 就可以了。&lt;/p&gt;

&lt;h3 id=&quot;检查-java-环境&quot;&gt;检查 Java 环境&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java &lt;span class=&quot;nt&quot;&gt;-version&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; java version &lt;span class=&quot;s2&quot;&gt;&quot;1.8.0_311&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; Java&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; SE Runtime Environment &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 1.8.0_311-b11&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; Java HotSpot&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 64-Bit Server VM &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 25.311-b11, mixed mode&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Metabase 要求 Java 8 及以上，如果你的环境不支持，请先升级&lt;/p&gt;

&lt;h3 id=&quot;获取-metabase-的-jar-包&quot;&gt;获取 Metabase 的 Jar 包&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;https://metabase.com/start/jar.html&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;通过上方这个链接，可以很快的获取到 Metabase 的最新版本的 Jar 包&lt;/p&gt;

&lt;h3 id=&quot;启动-metabase&quot;&gt;启动 Metabase&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; metabase.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过一个简单的命令，就可以启动 Metabase 了，这个命令会自动检查环境，如果环境没问题，就会自动启动 Metabase 了。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;生产环境的 MetaBase 路径是 /data/product/metabase/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;成功启动后，Metabase 会运行在 3000 端口&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;http://localhost:3000/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;以后台方式运行-metabase&quot;&gt;以后台方式运行 Metabase&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;nohup &lt;/span&gt;java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; metabase.jar &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; metabase.log 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;日志文件会保存在本地的 metabase.log 文件中，如果你想查看 Metabase 的日志，可以使用 tail -f metabase.log 来查看。&lt;/p&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;h3 id=&quot;配置-metabase-的数据库&quot;&gt;配置 Metabase 的数据库&lt;/h3&gt;

&lt;p&gt;Metabase 默认的采用的是H2的作为数据库存储，会存放在程序运行目录下的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt; 目录下；但对于在正式环境中启用 Metabase，我们建议使用 MySQL 来作为数据库存储。&lt;/p&gt;

&lt;p&gt;而指定 Metabase 的数据库配置，可以很方便的加载到系统的默认环境中:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
vim ~/.bashrc

&lt;span class=&quot;c&quot;&gt;# update metabase config at .bashrc&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MB_DB_TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mysql
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MB_DB_DBNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;metabase
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MB_DB_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3306
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MB_DB_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MB_DB_PASS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MB_DB_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MB_DB_CONNECTION_URI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mysql://MB_DB_HOST:MB_DB_PORT/MB_DB_DBNAME?user=MB_DB_USER&amp;amp;password=MB_DB_PASS&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_TIMEZONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Asia/Shanghai
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;配置-metabase-的-nginx&quot;&gt;配置 Metabase 的 Nginx&lt;/h3&gt;

&lt;p&gt;通过配置 Metabase 的 Nginx，可以让 Metabase 在网站上运行，这样可以开放外部服务给使用者&lt;/p&gt;

&lt;p&gt;对 Nginx 的配置，比较简单，可以参考这个文档：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	listen 443 ssl&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	server_name example.com&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	root /var/www/example.com/public&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;c&quot;&gt;# reverse proxy&lt;/span&gt;
	location /mb/ &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		proxy_pass http://127.0.0.1:3000&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		proxy_set_header Host &lt;span class=&quot;nv&quot;&gt;$Host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;overseas-metabase 的 配置文件放在 /etc/nginx/config.d/leyan.core 下，在 80.conf 内 引用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;配置-metabase-的-clickhouse-插件&quot;&gt;配置 Metabase 的 ClickHouse 插件&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Metabase 官方支持数据库 https://www.metabase.com/docs/latest/administration-guide/01-managing-databases.html#officially-supported-databases&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Metabase 默认支持非常丰富数据库驱动，这些都会预置在 Jar 内，例如 MySQL、Oracle、SQL Server；但是 ClickHouse 不在其中，所以我们需要独立进行安装。&lt;/p&gt;

&lt;p&gt;ClickHouse 驱动: https://github.com/enqueue/metabase-clickhouse-driver#readme=&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;下载 &lt;strong&gt;合适的&lt;/strong&gt; 驱动版本，放在 Metabase 的目录下的 plugin 文件夹下&lt;/li&gt;
  &lt;li&gt;重新启动 Metabase 即可&lt;/li&gt;
  &lt;li&gt;在 Metabase 的数据库管理中新增数据库，选择类型为 ClickHouse&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;更多三方驱动: https://www.metabase.com/docs/latest/developers-guide-drivers.html#how-to-use-a-community-built-driver&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;tips&quot;&gt;Tips&lt;/h2&gt;

&lt;h3 id=&quot;1-如何重启-metabase-&quot;&gt;1. 如何重启 Metabase ?&lt;/h3&gt;

&lt;p&gt;直接杀掉进程即可，如果为了以后方便，可以将下述命令保存为 stop.sh 放在目录下，后续直接执行&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;APP_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;metabase&quot;&lt;/span&gt;

ps aux | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;python | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;APP_NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $2}'&lt;/span&gt; | xargs &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
                <link>https://samzong.me/post/2022/04/Metabase-%E4%B8%8A%E6%89%8B-%E4%BD%BF%E7%94%A8Jar.html</link>
                <guid>https://samzong.me/post/2022/04/Metabase-上手-使用Jar</guid>
                <pubDate>Fri, 15 Apr 2022 21:40:00 -0500</pubDate>
        </item>

        <item>
                <title>SQL 对时间整点的处理</title>
                <description>&lt;h2 id=&quot;需要取值整点时间&quot;&gt;需要取值整点时间&lt;/h2&gt;

&lt;p&gt;项目上需要取值上一个整点的数据查询处理，落表，然后实现按小时更新&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ClickHouse&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;subtractHours&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_trunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hour'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;MySQL&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auth_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATE_SUB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DATE_FORMAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d %H:00:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auth_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATE_FORMAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d %H:00:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
                <link>https://samzong.me/post/2022/04/SQL-%E5%AF%B9%E6%97%B6%E9%97%B4%E6%95%B4%E7%82%B9%E7%9A%84%E5%A4%84%E7%90%86.html</link>
                <guid>https://samzong.me/post/2022/04/SQL-对时间整点的处理</guid>
                <pubDate>Fri, 15 Apr 2022 13:55:00 -0500</pubDate>
        </item>

        <item>
                <title>淘宝Python SDK 优化支持 Python3</title>
                <description>&lt;p&gt;淘宝开放平台的SDK，Python的 SDK 是在2012年，仅支持Python2.7 及以上，但不支持Python3；二现在是2102年了，像我这样的新手都是直接从Python3开始的&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;我已经把这个项目开放在 GitHub https://github.com/SAMZONG/taobao-openapi&lt;/li&gt;
  &lt;li&gt;同时放在了 Python pypi 软件仓库 https://pypi.org/project/taobao-openapi/&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install--usage&quot;&gt;Install &amp;amp; Usage&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;taobao-openapi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;taobao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;openapi&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tbapi&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;持续补充sdk能力&quot;&gt;持续补充SDK能力&lt;/h2&gt;

&lt;p&gt;淘宝开放平台后台下载获取到的SDK文件，会根据应用的权限生产对应的SDK包，所以你可能获取到的是几十个或者上百个&lt;/p&gt;

&lt;p&gt;NOTE: &lt;strong&gt;如果你有其他的SDK没有在文档中找到，可以反馈给我或者提 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull requests&lt;/code&gt;，大家一起扩充SDK&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;v1.0.6 fix 文档错误&lt;/li&gt;
  &lt;li&gt;v1.0.4 增加更多接口&lt;/li&gt;
  &lt;li&gt;v1.0.3 增加更多接口&lt;/li&gt;
  &lt;li&gt;v1.0.2 添加 Wdt QimenCloud-openapi&lt;/li&gt;
  &lt;li&gt;v1.0.1 适配 taobao-openapi&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;使用说明&quot;&gt;使用说明&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;
import top.api
import json

app_key = 
app_secret = 
session_key = 

def trade_rates_get_request():
	req = top.api.TraderatesGetRequest()
	req.set_app_info(top.appinfo(app_key, app_secret))
	
	req.fields = &quot;tid,oid,role,nick,result,created,rated_nick,item_title,item_price,content,reply,num_iid&quot;
	req.rate_type = &quot;get&quot;
	req.role = &quot;buyer&quot;
	
	try:
		resp = req.getResponse(session_key)
	except Exception as e:
		print(e)


if __name__ == '__main__':
	result = trade_rates_get_request()
	print(result)

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;适配部分介绍&quot;&gt;适配部分介绍&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;以下为了省时间，基本引用了 https://blog.csdn.net/starryhwj/article/details/103026402 补充了8
同时感谢 &lt;a href=&quot;https://github.com/ymj4023&quot;&gt;@ymj4023&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;1-python3-int替代了long&quot;&gt;1. Python3 int替代了long&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;FROM: str(long(time.time() * 1000))

TO: P_TIMESTAMP: str(int(time.time() * 1000))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;2-用items替代iteritems&quot;&gt;2. 用items替代iteritems&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;FROM: for key, value in application_parameter.iteritems():

TO: for key, value in application_parameter.items():
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;3-dict方法优化&quot;&gt;3. dict方法优化&lt;/h3&gt;

&lt;p&gt;查阅资料，发现有人说到dict methods dict.keys(), dict.items() and dict.values() return “views” instead of lists.这样就显而易见知道怎么改了：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;FROM: keys = keys.sort()

TO: keys = sorted(keys)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;4-unicode-对象需要编码&quot;&gt;4. unicode 对象需要编码&lt;/h3&gt;

&lt;p&gt;英文意思很明确，unicode对象在哈希之前必须进行编码转换，想起之前又看到过中文字符在python中是以unicode存在的，所以：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;FROM: sign = hashlib.md5(parameters)).hexdigest().upper()

TO: sign = hashlib.md5(parameters.encode(&quot;utf-8&quot;)).hexdigest().upper()
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;5-soketpy-httpconnection&quot;&gt;5. soket.py HttpConnection&lt;/h3&gt;

&lt;p&gt;这是花费时间最长的一个错误。首先，直接看最后，错误在soket.py里，心凉了半截，难道这里的调用都不一样了,再网上看又是python 3.X的http模块，去百度了半天也没有发现类似的错误，只能自己硬着头皮去看模块，功夫不负有心人，其实也很简单，在类HTTPConnection的初始化函数是这样定义的:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;FROM: connection = httplib.HTTPConnection(self.__domain, self.__port, False, timeout)

TO: connection = httplib.HTTPConnection(self.__domain, self.__port, timeout)
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;比较下参数发现，python 2比3多了一个参数，去掉即可，这个错误主要是是报错的地方和修改的地方不在一起，所以很难插出原因。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;6-urllib方法升级&quot;&gt;6. urllib方法升级&lt;/h3&gt;

&lt;p&gt;官方文档是这样解释的：urllib has been split up in Python 3. The urllib.urlencode() function is now urllib.parse.urlencode(), and the urllib.urlopen() function is now urllib.request.urlopen()&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;FROM: url = N_REST + &quot;?&quot; + urllib.parse.urlencode(sys_parameters)

TO: url = N_REST + &quot;?&quot; + urllib.urlencode(sys_parameters)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;7-jsonobj-异常抛出&quot;&gt;7. jsonobj 异常抛出&lt;/h3&gt;

&lt;p&gt;这个错误是在API调用出异常的时候暴露出来的。原因前面已经提到了，稍微查了下替代的方法：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;if &quot;error_response&quot; in jsonobj:

if P_CODE in jsonobj[&quot;error_response&quot;]:
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;8-is-not-修改为-&quot;&gt;8. is not 修改为 !=&lt;/h3&gt;

&lt;p&gt;在if 需要使用反向时，应该是 != ，而不是使用  is not ；这个也是 PyCharm 给的建议，所以在使用时，所以简单调整下就好了&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;FROM: if respone.status is not 200:

TO: if response.status != 200:
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;以上调整之后，基本就可以正常跑起来了，基本是可以支持Python3的使用，我试过了Python3.6-3.9，都是OK的。&lt;/p&gt;

&lt;h2 id=&quot;pypi-howto&quot;&gt;pypi HowTo&lt;/h2&gt;

&lt;p&gt;把你的库上传到pypi 之前，主要依赖的是 setup.py，下方是对应的demo&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;打包 python3 steup.py sdist&lt;/li&gt;
  &lt;li&gt;twine upload dist/*&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意： 需要先安装 setuptools twine&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;# /usr/bin/env python3
# -*- coding: utf-8 -*-

import setuptools
from distutils.core import setup
import codecs
import os
import sys

try:
	from setuptools import setup, find_packages
except:
	from distutils import setup

with open('README.md', 'r', encoding=&quot;utf-8&quot;) as fp:
	readme = fp.read()

VERSION = &quot;1.0.0&quot;
LICENSE = &quot;MIT&quot;

setup(
	name='taobao-openapi',
	version=VERSION,
	description=(
		'集合了淘宝开放平台的商铺OPEN API，并适配了Python3'
	),
	long_description=readme,
	long_description_content_type='text/markdown',
	author='samzong.lu',
	author_email='samzong.lu@gmail.com',
	maintainer='samzong.lu',
	maintainer_email='samzong.lu@gmail.com',
	license=LICENSE,
	packages=find_packages(),
	platforms=[&quot;all&quot;],
	url='https://github.com/SAMZONG/taobao-sdk-python3',
	install_requires=[
		&quot;requests&quot;
		],
	classifiers=[
		'Development Status :: 4 - Beta',
		'Operating System :: OS Independent',
		'Intended Audience :: Developers',
		'License :: OSI Approved :: BSD License',
		'Programming Language :: Python',
		'Programming Language :: Python :: Implementation',
		'Programming Language :: Python :: 3',
		'Programming Language :: Python :: 3.4',
		'Programming Language :: Python :: 3.5',
		'Programming Language :: Python :: 3.6',
		'Programming Language :: Python :: 3.7',
		'Programming Language :: Python :: 3.8',
		'Programming Language :: Python :: 3.9',
		'Topic :: Software Development :: Libraries'
		],
	)
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>https://samzong.me/post/2022/04/%E6%B7%98%E5%AE%9DPython-SDK%E4%BC%98%E5%8C%96%E6%94%AF%E6%8C%81Python3.html</link>
                <guid>https://samzong.me/post/2022/04/淘宝Python-SDK优化支持Python3</guid>
                <pubDate>Thu, 14 Apr 2022 05:43:00 -0500</pubDate>
        </item>

        <item>
                <title>Git 修复历史错误的 Author 信息</title>
                <description>&lt;h2 id=&quot;git-author-的作用&quot;&gt;git author 的作用&lt;/h2&gt;

&lt;p&gt;一般情况下 git 仓库，都是通过 author 中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user.email&lt;/code&gt; 的判定提交者的身份；而这个配置一般在新电脑上需要初始化配置，否则还是容易出错。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;个人软件仓库使用了公司的 author 信息 [信息泄漏的风险]&lt;/li&gt;
  &lt;li&gt;和其他开发者使用了相同的 author 信息 [影响commit追踪]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-修改为正确的-author-信息&quot;&gt;✅ 修改为正确的 author 信息&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意修改全局需要增加 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--global&lt;/code&gt; 参数&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 修改系统默认（影响全部项目）谨慎使用
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name &lt;span class=&quot;s2&quot;&gt;&quot;samzong&quot;&lt;/span&gt;
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email &lt;span class=&quot;s2&quot;&gt;&quot;samzong.lu@gmail.com&quot;&lt;/span&gt;

// 修改单个项目
git config user.name &lt;span class=&quot;s2&quot;&gt;&quot;samzong&quot;&lt;/span&gt;
git config user.email &lt;span class=&quot;s2&quot;&gt;&quot;samzong.lu@gmail.com&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但是，通过以上的变更后，仅对后续的操作生效；所以这样可以帮助你回到正确的轨道上，但无法解决历史遗留的错误问题！&lt;/p&gt;

&lt;p&gt;下面我将演示如何解决这个问题&lt;/p&gt;

&lt;h2 id=&quot;修订最近一次提交-amend&quot;&gt;修订最近一次提交 (–amend)&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit&lt;/code&gt; 提供了 –amend 的参数，作用是对commit进行修正，如果你是最近一次提交出错，那么可以直接使用下方命令完成补救。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 📢 注意替换 user.name &amp;amp; user.email 为正确的选项&lt;/span&gt;
git commit &lt;span class=&quot;nt&quot;&gt;--amend&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--author&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{user.name} &amp;lt;{user.email}&amp;gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以上变更完成后，你会发现最近一次的提交被修正成功了，可以使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log -1&lt;/code&gt; 来对比前后的 author 信息的变更；确认无误后，将你的修改推送到目标仓库中即可；&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;如果修改后的结果不满意，是可以再次修订&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;修改更早之前的提交-谨慎使用&quot;&gt;修改更早之前的提交 (谨慎使用)&lt;/h2&gt;

&lt;p&gt;写在前面的话，如果你知道rebase的作用，请谨慎使用的同时记住，可以在任何过程中终止你的操作，这非常重要，使用如下命令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bashe&quot;&gt;git rebase --abort
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果需要修改更早之前的提交，那就需要结合 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase&lt;/code&gt; 的能力，来实现了&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;rebase 是个危险的操作，其产生的风险也就是目前我们要做的修改历史；&lt;strong&gt;仅建议在测试项目或者个人项目中使用，涉及到多人协作的开源、商业化项目谨慎使用&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;## 使用 git log 找到你想要修改的提交&lt;/span&gt;
git log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;commit 145a3eb180c3f45fd99c2d61cad6439177cbc319
Author: samzong.lu &amp;lt;samzong.lu@gmail.com&amp;gt;
Date:   Sun Mar 20 22:22:58 2022 +0800

commit 7e04c7ebaf06b2eea1951a29b79a571090cd1d8b  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;commit_id&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
Author: samzong.lu &amp;lt;samzong.lu@gmail.com&amp;gt;
Date:   Sun Mar 20 22:19:48 2022 +0800
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;找到你想要更新的commit_id, 然后使用rebase 命令来进行处理&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git rebase &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;commit_id&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后继续使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit --amend&lt;/code&gt; 来修改 author 信息，可以增加 –no-edit 来提效，表示无需弹出修改 commit info 的窗口&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit &lt;span class=&quot;nt&quot;&gt;--amend&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--author&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{user.name} &amp;lt;{user.email}&amp;gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase --coutine&lt;/code&gt; 继续完成剩余的提交&lt;/p&gt;

&lt;h2 id=&quot;更高级做法-filter-branch&quot;&gt;更高级做法 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filter-branch&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filter-branch&lt;/code&gt; 虽然被官方推荐，但也不是可以轻易使用的工具；本次的目的只是修改 author 中邮箱，所以一定要加上 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--commit-filter&lt;/code&gt;，官方的脚本实例我直接copy在下方了&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git filter-branch &lt;span class=&quot;nt&quot;&gt;--commit-filter&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'
        if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;schacon@localhost&quot; ];
        then
                GIT_AUTHOR_NAME=&quot;Scott Chacon&quot;;
                GIT_AUTHOR_EMAIL=&quot;schacon@example.com&quot;;
                git commit-tree &quot;$@&quot;;
        else
                git commit-tree &quot;$@&quot;;
        fi'&lt;/span&gt; HEAD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;push-到-repo-的注意事项&quot;&gt;push 到 repo 的注意事项&lt;/h2&gt;

&lt;p&gt;注意以上的消息会导致提交包含了 “它们父提交的SHA-1校验” 和 “这个命令修改历史中的每一个提交的SHA-1校验”， 再加上修改后的 author 信息，所以在push时会遇到警告，可以使用下方命令强制提交&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt; origin &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;branch_name&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在多人协作的场景可能会出现覆盖他人代码的情况，请注意协商并 fetch 分支的变更，确保最新状态&lt;/p&gt;

</description>
                <link>https://samzong.me/post/2022/04/Git-%E4%BF%AE%E5%A4%8D%E5%8E%86%E5%8F%B2%E9%94%99%E8%AF%AF%E7%9A%84Author%E4%BF%A1%E6%81%AF.html</link>
                <guid>https://samzong.me/post/2022/04/Git-修复历史错误的Author信息</guid>
                <pubDate>Mon, 11 Apr 2022 03:19:00 -0500</pubDate>
        </item>

        <item>
                <title>Awsome Telegram Bot</title>
                <description>&lt;h2 id=&quot;关于电报群&quot;&gt;关于电报群&lt;/h2&gt;

&lt;p&gt;从2014年开始使用电报群，在这个不存在的通讯工具中，结识不少有趣的朋友，也发现了大量有价值的群组或BOT，可以很方便你的生活&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;P.S. 不要过分关注那些黑产、广告和色情信息，它们虽然利用了这个工具，但是也只是其中一小部分&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;我在电报做的事情&quot;&gt;我在电报做的事情&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;美剧、电影和图书，所以最新的资源基本在电报群出现了，远比各种关注微信公众号套娃的营销号好很多&lt;/li&gt;
  &lt;li&gt;技术群，感谢技术群里的各位大佬给的帮助，尤其感谢 Taiwan 的几个技术社群，会有人认真解答你的问题
    &lt;ul&gt;
      &lt;li&gt;Go/Php 各类开发群&lt;/li&gt;
      &lt;li&gt;开源软件的沟通群， 在这里你可以和开发者们进行沟通，并且提供你的建议，甚至讨论 PR&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;各类BOT
    &lt;ul&gt;
      &lt;li&gt;Temp Mail 生成临时邮箱&lt;/li&gt;
      &lt;li&gt;资料查询&lt;/li&gt;
      &lt;li&gt;GitHub 助手&lt;/li&gt;
      &lt;li&gt;短连接&lt;/li&gt;
      &lt;li&gt;网站服务监控&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;羊毛群/合租群/VPN群，这里不用详细说明&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;使用的一些技巧&quot;&gt;使用的一些技巧&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;你需要一个 !+86 的手机号，保障你与所有的网友的友好交流，可以考虑使用 G家Voice 买个美区号方便&lt;/li&gt;
  &lt;li&gt;DO NOT USE CHINESE ! 这会让你发现不一样的 Telegram&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;develop-in-telegram&quot;&gt;Develop in Telegram&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://ipic-typora-samzong.oss-cn-qingdao.aliyuncs.com//uPic/7a0Bjv.png&quot; alt=&quot;7a0Bjv&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://telegra.ph/&quot;&gt;telegra.ph&lt;/a&gt; 匿名博客， Writing is Sharing ~&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://core.telegram.org/bots/api&quot;&gt;telegram.bot_api&lt;/a&gt; 定制开发你的webhook&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>https://samzong.me/post/2022/04/awsome-telegram-bot.html</link>
                <guid>https://samzong.me/post/2022/04/awsome-telegram-bot</guid>
                <pubDate>Sun, 10 Apr 2022 17:20:25 -0500</pubDate>
        </item>

        <item>
                <title>Javascript Tips</title>
                <description>&lt;ul&gt;
  &lt;li&gt;alert 弹窗提醒一段文本&lt;/li&gt;
  &lt;li&gt;a = prompt(“input desc”)  接收输入，并把内容赋值给a&lt;/li&gt;
  &lt;li&gt;confirm 弹出确认窗口，让用户确认，这是给出的结果就是 yes/no&lt;/li&gt;
  &lt;li&gt;console.log(‘AAS’) 输出一段日志&lt;/li&gt;
  &lt;li&gt;let a = 1  声明 变量 a=1， number 类型&lt;/li&gt;
  &lt;li&gt;const ABB = 123 声明一个常量 ABB, 不可以重新赋值&lt;/li&gt;
  &lt;li&gt;undefined 和 null 都是空的意思，但是这两个又不相同&lt;/li&gt;
  &lt;li&gt;a ?? “hello” ;  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;??&lt;/code&gt; 叫做 空值运算符，指当a 未被赋值时，将hello赋值给a，如果a已经被赋值了，则不变 ; a 需要被声明，在JavaScript中 声明 和 赋值 是两件事情&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;js的数据类型&quot;&gt;js的数据类型&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;js 是弱类型语言， 1 == ‘1’ =&amp;gt; true; 但是  1 === ‘1’ =&amp;gt; false；   6 / “2” =&amp;gt; 3, typeof is number&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;支持判断&quot;&gt;支持判断&lt;/h3&gt;

&lt;p&gt;if  /elif else&lt;/p&gt;

&lt;h3 id=&quot;支持的循环方式&quot;&gt;支持的循环方式&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Hello&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;whIle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// Hello&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//Hello&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;函数声明&quot;&gt;函数声明&lt;/h3&gt;

&lt;p&gt;必须要使用 function&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello Javascript !&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;函数中变量的作用域：这部分与Python和C一致， 分别为 内部变量 和 外部变量； 关系存在在继承的概念&lt;/li&gt;
  &lt;li&gt;函数的参数， 入参定义在 () 内，当函数声明了入参后，在对应调用时，就需要传递符合条件的参数
    &lt;ul&gt;
      &lt;li&gt;支持函数的默认值的设定&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;函数的返回值，同样使用 return 作为返回值处理&lt;/li&gt;
  &lt;li&gt;函数 function is  an action, 所以函数的命名通常是 使用动词； javascipt 的命名方式 官方建议为 驼峰的方式&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;函数的特殊部分&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;函数表达式   let  sayHi = function () { alert(‘Hi’)}  利用声明 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; 创建了一个函数，并把他赋值给了变量 sayHi&lt;/li&gt;
  &lt;li&gt;回调函数&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;[ ] 今天学习的内容到此 回调函数  &lt;a href=&quot;https://zh.javascript.info/function-expressions&quot;&gt;https://zh.javascript.info/function-expressions&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;严格模式&quot;&gt;严格模式&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;三连表达式     cond ? resultA : resultB   //  1 &amp;gt; 0 ? alert(true) : alert(false)   cond 为真展示resultA, 反之展示resultB&lt;/li&gt;
  &lt;li&gt;空值运算符     a ?? b       =&amp;gt;  a ?? b 的结果是 a，除非 a 为 null/undefined，这时结果是 b&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;开发行为规范&quot;&gt;开发行为规范&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;BDD&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在 BDD 中，规范先行，实现在后。最后我们同时拥有了规范和代码。&lt;/p&gt;

&lt;p&gt;规范有三种使用方式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;作为 测试 —— 保证代码正确工作。&lt;/li&gt;
  &lt;li&gt;作为 文档 —— describe 和 it 的标题告诉我们函数做了什么。&lt;/li&gt;
  &lt;li&gt;作为 案例 —— 测试实际工作的例子展示了一个函数可以被怎样使用。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有了规范，我们可以安全地改进、修改甚至重写函数，并确保它仍然正确地工作。&lt;/p&gt;

&lt;p&gt;这在一个函数会被用在多个地方的大型项目中尤其重要。当我们改变这样一个函数时，没有办法手动检查每个使用它们的地方是否仍旧正确。&lt;/p&gt;

&lt;p&gt;如果没有测试，一般有两个办法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;展示修改，无论修改了什么。然后我们的用户遇到了 bug，这应该是我们没有手动完成某些检查。&lt;/li&gt;
  &lt;li&gt;如果对出错的惩罚比较严重，并且没有测试，那么大家会很害怕修改这样的函数，然后这些代码就会越来越陈旧，没有人会想接触它。这很不利于发展。自动化测试则有助于避免这样的问题！&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果这个项目被测试代码覆盖了，就不会出现这种问题。在任何修改之后，我们都可以运行测试，并在几秒钟内看到大量的检查。&lt;/p&gt;

&lt;p&gt;另外，一个经过良好测试的代码通常都有更好的架构。&lt;/p&gt;

&lt;p&gt;当然，这是因为覆盖了自动化测试的代码更容易修改和改进。但还有另一个原因。&lt;/p&gt;

&lt;p&gt;要编写测试，代码的组织方式应确保每个函数都有一个清晰描述的任务、定义良好的输入和输出。这意味着从一开始就有一个好的架构。&lt;/p&gt;

&lt;p&gt;在实际开发中有时候可能并不容易，有时很难在写实际代码之前编写规范，因为还不清楚它应该如何表现。但一般来说，编写测试使得开发更快更稳定。&lt;/p&gt;

&lt;h3 id=&quot;object-对象的基础知识&quot;&gt;Object 对象的基础知识&lt;/h3&gt;

&lt;p&gt;在js中 对象可以说非常常见的用到，所以相对来讲 定义一个对象也是非常的方便&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;构造函数&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;的语法&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;构造&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;字面量的语法&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在对象中，包含的是 一个个属性， 这些属性又以 键值对 的形式出现在 {} 中&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;定义一个有属性的对象  let user = {name:’alex’, age: 18}
    &lt;ul&gt;
      &lt;li&gt;增加属性 user.city = ‘Shanghai’  =&amp;gt;   user[‘love package’] = ‘Apple’&lt;/li&gt;
      &lt;li&gt;删除一个属性 delete user.age&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;计算属性  ： 当创建一个对象时，我可以在对象字面量中使用方括号，这叫做计算属性；计算属性的含义是 [fruit] 是从 变量 fruit 中获取的&lt;/li&gt;
  &lt;li&gt;判断一个 属性是否在对象中    ”key” in Object  ，这里的 key 需要时一个值，否则会被认为一个变量&lt;/li&gt;
  &lt;li&gt;遍历一个对象采用的方式是  for  (let key in Object) : 这里的做法是 声明[let] 变量key ，并且把Object 中的每一个key的值遍历赋予key&lt;/li&gt;
  &lt;li&gt;取出对象中一个key的值可以采用的方式 Object[key] 或者 Object.key；但是Object.key 会出现对 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;多词属性&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;单词属性   name , age&lt;/li&gt;
      &lt;li&gt;多词属性   “like birds” ， 这时使用 Object.key 的方式就不可行了&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;JavaScirpt 中的垃圾回收机制&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当一个对象中的属性被建立后，如果这些属性被多个对象引用时，其他一个对象被重新赋值了，那么这些属性还是可以被访问的；但是当所有对象被重置后，这些无法被访问的属性 就变得不可以，这也会占用我们内存，而这类也会被 回收。&lt;/p&gt;

&lt;h4 id=&quot;对象的方法-this&quot;&gt;对象的方法 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;this 是用来标识当前对象的，这个对象可以是个函数 ; 为了访问该对象，方法中可以使用 this 关键字。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;this 设计到编程的一种形式 ： **面向对象编程** OOP ; 当我们在代码中用对象表示实体时，就是所谓的 面向对象编程，简称为 “OOP”。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;this 的优势 ： 在 JavaScript 中，this 关键字与其他大多数编程语言中的不同。JavaScript 中的 this 可以用于任何函数，即使它不是对象的方法。&lt;/li&gt;
  &lt;li&gt;this 的值是在代码运行时计算出来的，它取决于代码上下文。 不用函数调用this时的到结果不一致的&lt;/li&gt;
  &lt;li&gt;箭头函数   function sum (a,b) =&amp;gt; a*b ； 这类箭头函数是没有自己的 this，如果在箭头函数中使用 this，会把this当成一个真正的对象去处理，这不好&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在 JavaScript 中，this 是“自由”的，它的值是在调用时计算出来的，它的值并不取决于方法声明的位置，而是取决于在“点符号前”的是什么对象。在运行时对 this 求值的这个概念既有优点也有缺点。一方面，函数可以被重用于不同的对象。另一方面，更大的灵活性造成了更大的出错的可能。这里我们的立场并不是要评判编程语言的这个设计是好是坏。而是要了解怎样使用它，如何趋利避害。&lt;/p&gt;

&lt;h4 id=&quot;对象的-构造和操作符-new&quot;&gt;对象的 构造和操作符 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;new&lt;/code&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;构造函数在技术上，也是属于常规函数，不过有2个约定：
    &lt;ul&gt;
      &lt;li&gt;命名以大写字母开头， 这是一个共同的约定，用来标明一个函数将被使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;new&lt;/code&gt; 来运行&lt;/li&gt;
      &lt;li&gt;他们只能有 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;new&lt;/code&gt; 操作符来执行&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;构造器不能被再次调用，因为他保存在任何地址，知识被创建后 后续 调用使用；所以 构造函数的封装一个 单一对象的代码，而无需将来重用&lt;/p&gt;

&lt;h4 id=&quot;javascript--可选链&quot;&gt;JavaScript  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?.&lt;/code&gt; 可选链&lt;/h4&gt;

&lt;p&gt;可选链 ?. 语法有三种形式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;obj?.prop —— 如果 obj 存在则返回 obj.prop，否则返回 undefined。&lt;/li&gt;
  &lt;li&gt;obj?.[prop] —— 如果 obj 存在则返回 obj[prop]，否则返回 undefined。&lt;/li&gt;
  &lt;li&gt;obj.method?.() —— 如果 obj.method 存在则调用 obj.method()，否则返回 undefined。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;正如我们所看到的，这些语法形式用起来都很简单直接。?. 检查左边部分是否为 null/undefined，如果不是则继续运算。 ?. 链使我们能够安全地访问嵌套属性。 但是，我们应该谨慎地使用 ?.，仅在当左边部分不存在也没问题的情况下使用为宜。以保证在代码中有编程上的错误出现时，也不会对我们隐藏。&lt;/p&gt;

&lt;h3 id=&quot;symbol-类型&quot;&gt;Symbol  类型&lt;/h3&gt;

&lt;p&gt;根据规范，Obj的属性键 只能是 字符串类型或者 Symbol 类型；不能是Number，也不能是Boolean。&lt;/p&gt;

&lt;p&gt;Symbol 值 表示 唯一的标识符，现在可以通过 Symbol() 来创建这种类型的值；Symbol的特性是唯一，即使我们创建了相同描述的Symbol，他们的值不相同的；比如以下：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;id1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id2&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 结果是 false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Symbol 的另外一个特性是不会被自动转化为字符串；其实在javascript中大多数的数值都是可以进行字符串的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;隐式转换&lt;/code&gt; ，但是使用 Symbol() 定义的一个字符，是不能够直接转化为 字符串的， 可以使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symbol('id').toString()&lt;/code&gt; 来输出字符串。&lt;/p&gt;

&lt;h3 id=&quot;原始类型的方法&quot;&gt;原始类型的方法&lt;/h3&gt;

&lt;p&gt;在 JavaScript 中有 7 种原始类型：string，number，bigint，boolean，symbol，null 和 undefined。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;字符串处理方法&lt;/li&gt;
  &lt;li&gt;Number的处理方法&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;数组方法的备忘笔记&quot;&gt;数组方法的备忘笔记&lt;/h3&gt;

&lt;p&gt;数组方法备忘单：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;添加/删除元素：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;push(…items) —— 向尾端添加元素&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;pop() —— 从尾端提取一个元素&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;shift() —— 从首端提取一个元素&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;unshift(…items) —— 向首端添加元素&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;splice(pos, deleteCount, …items) 从 pos 开始删除 deleteCount 个元素，并插入 items。 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;用来控制数组的增删改查&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;slice(start, end) —— 创建一个新数组，将从索引 start 到索引 end（但不包括 end）的元素复制进去 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;取出部分数组的内容产生新数组&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;concat(…items) —— 返回一个新数组：复制当前数组的所有元素，并向其中添加 items。如果 items 中的任意一项是一个数组，那么就取其元素。 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;拼接多个数组，产生一个新的数组&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*搜索元素：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;indexOf/lastIndexOf(item, pos) —— 从索引 pos 开始搜索 item，搜索到则返回该项的索引，否则返回 -1。&lt;/li&gt;
  &lt;li&gt;includes(value) —— 如果数组有 value，则返回 true，否则返回 false。&lt;/li&gt;
  &lt;li&gt;find/filter(func) —— 通过 func 过滤元素，返回使 func 返回 true 的第一个值/所有值。&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;findIndex 和 find 类似，但返回索引而不是值。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;遍历元素：
    &lt;ul&gt;
      &lt;li&gt;forEach(func) —— 对每个元素都调用 func，不返回任何内容。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Apple&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Orage&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Prism&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 遍历数组 使用 for .. of 不能获取到当前元素的索引，知识获取到元素的值；但是大多数情况下是够用的，而且这样些代码更短，质量会高一些&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 这个方式就是标准的通过遍历元素的索引，然后通过索引获取到对应的数组元素的值&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;转换数组：
    &lt;ul&gt;
      &lt;li&gt;map(func) —— 根据对每个元素调用 func 的结果创建一个新数组。&lt;/li&gt;
      &lt;li&gt;sort(func) —— 对数组进行原位（in-place）排序，然后返回它。&lt;/li&gt;
      &lt;li&gt;reverse() —— 原位（in-place）反转数组，然后返回它。&lt;/li&gt;
      &lt;li&gt;split/join —— 将字符串转换为数组并返回。&lt;/li&gt;
      &lt;li&gt;reduce/reduceRight(func, initial) —— 通过对每个元素调用 func 计算数组上的单个值，并在调用之间传递中间结果。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;其他：
    &lt;ul&gt;
      &lt;li&gt;Array.isArray(arr) 检查 arr 是否是一个数组。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;请注意，sort，reverse 和 splice 方法修改的是数组本身； 这些是最常用的方法，它们覆盖 99％ 的用例。但是还有其他几个：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;arr.some(fn)/arr.every(fn) 检查数组。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;与 map 类似，对数组的每个元素调用函数 fn。如果任何/所有结果为 true，则返回 true，否则返回 false。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;这两个方法的行为类似于&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;和 &amp;amp;&amp;amp; 运算符：如果 fn 返回一个真值，arr.some() 立即返回 true 并停止迭代其余数组项；如果 fn 返回一个假值，arr.every() 立即返回 false 并停止对其余数组项的迭代。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;我们可以使用 every 来比较数组：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arraysEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;every&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arraysEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;arr.fill(value, start, end) —— 从索引 start 到 end，用重复的 value 填充数组。&lt;/li&gt;
  &lt;li&gt;arr.copyWithin(target, start, end) —— 将从位置 start 到 end 的所有元素复制到 自身 的 target 位置（覆盖现有元素）。&lt;/li&gt;
  &lt;li&gt;arr.flat(depth)/arr.flatMap(fn) 从多维数组创建一个新的扁平数组。&lt;/li&gt;
  &lt;li&gt;Array.of(element0[, element1[, …[, elementN]]]) 基于可变数量的参数创建一个新的 Array 实例，而不需要考虑参数的数量或类型。&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>https://samzong.me/post/2022/03/Javascript-Tips.html</link>
                <guid>https://samzong.me/post/2022/03/Javascript-Tips</guid>
                <pubDate>Mon, 28 Mar 2022 14:09:44 -0500</pubDate>
        </item>

        <item>
                <title>Awesome Hexo Plugin</title>
                <description>&lt;p&gt;About my blog use hexo plugin&lt;/p&gt;

&lt;h2 id=&quot;hexo-hide-posts&quot;&gt;hexo-hide-posts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/prinsss/hexo-hide-posts&quot;&gt;hexo-hide-posts&lt;/a&gt; is A plugin to hide specific posts from your Hexo blog and make them only accessible by links&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;hexo-hide-posts &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Usage&lt;/p&gt;

&lt;p&gt;Add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hidden: true&lt;/code&gt; to the &lt;a href=&quot;https://hexo.io/docs/front-matter&quot;&gt;front-matter&lt;/a&gt; of posts which you want to hide.&lt;/p&gt;

&lt;p&gt;e.g. Edit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source/_posts/lorem-ipsum.md&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: 'Lorem Ipsum'
date: '2019/8/10 11:45:14'
hidden: true
---
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This post will not be shown anywhere, but you can still access it by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://hexo.test/lorem-ipsum/&lt;/code&gt;. (If you want to completely prevent a post from rendering, just set it as a &lt;a href=&quot;https://hexo.io/docs/writing.html#Drafts&quot;&gt;draft&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;To get a list of hidden posts, you can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hexo hidden:list&lt;/code&gt; from command line.&lt;/p&gt;

&lt;p&gt;For developers, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;all_posts&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hidden_posts&lt;/code&gt; added to &lt;a href=&quot;https://hexo.io/api/locals&quot;&gt;Local Variables&lt;/a&gt; may be useful.&lt;/p&gt;

&lt;h3 id=&quot;config&quot;&gt;Config&lt;/h3&gt;

&lt;p&gt;In your site’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# hexo-hide-posts&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;hide_posts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;enable&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Change the filter name to fit your need&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hidden&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Generators which you want to expose all posts (include hidden ones) to.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Common generators: index, tag, category, archive, sitemap, feed, etc.&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;public_generators&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Add &quot;noindex&quot; meta tag to prevent hidden posts from being indexed by search engines&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;noindex&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;hexo-generator-restful&quot;&gt;hexo-generator-restful&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yscoder/hexo-generator-restful&quot;&gt;hexo-generator-restful&lt;/a&gt; is generate restful json data for Hexo plugins.&lt;/p&gt;

&lt;h3 id=&quot;install&quot;&gt;Install&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;hexo-generator-restful &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;config-1&quot;&gt;Config&lt;/h3&gt;

&lt;p&gt;以下为默认配置，属性值为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; 表示不生成。&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;restful&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# site 可配置为数组选择性生成某些属性&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# site: ['title', 'subtitle', 'description', 'author', 'since', email', 'favicon', 'avatar']&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# hexo.config mix theme.config&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;posts_size&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# 文章列表分页，0 表示不分页&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;posts_props&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;# 文章列表项的需要生成的属性&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;updated&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;excerpt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;# 封面图，取文章第一张图片&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;keywords&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;# 分类数据&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;use_category_slug&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Use slug for filename of category data&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;# 标签数据&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;use_tag_slug&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;# Use slug for filename of tag data&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;# 文章数据&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;# 额外的 Hexo 页面数据, 如 About&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;get-hexo-config&quot;&gt;Get Hexo Config&lt;/h3&gt;

&lt;p&gt;获取所有 Hexo 配置（站点配置和主题配置）。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Request&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /api/site.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://samzong.me/api/site.json&quot;&gt;/api/site.json&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;get-posts&quot;&gt;Get Posts&lt;/h3&gt;

&lt;p&gt;如果配置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;posts_size: 0&lt;/code&gt; 则不分页，以下请求会获取全部文章。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Request&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /api/posts.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;示例为分页配置下的数据，会包含分页属性 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;total&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pageSize&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pageCount&lt;/code&gt;，不分页的数据不包含这三项。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://samzong.me/api/posts.json&quot;&gt;/api/posts.json&lt;/a&gt;&lt;/p&gt;
</description>
                <link>https://samzong.me/post/2022/03/awesome-hexo-plugins.html</link>
                <guid>https://samzong.me/post/2022/03/awesome-hexo-plugins</guid>
                <pubDate>Sun, 27 Mar 2022 16:45:17 -0500</pubDate>
        </item>


</channel>
</rss>
